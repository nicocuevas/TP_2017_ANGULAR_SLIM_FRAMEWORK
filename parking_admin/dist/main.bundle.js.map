{"version":3,"sources":["webpack:///./src/app/models/user.ts","webpack:///./src/app/service/brand.service.ts","webpack:///./src/app/service/customer.service.ts","webpack:///./src/app/service/lot.service.ts","webpack:///./src/app/service/vehicle-type.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/customer/customer-add.component.ts","webpack:///./src/app/admin/customer/customer-edit.component.ts","webpack:///./src/app/admin/customer/customer.component.ts","webpack:///./src/app/admin/lots/lots.component.ts","webpack:///./src/app/admin/parking/parking.component.ts","webpack:///./src/app/admin/profile/profile.component.ts","webpack:///./src/app/admin/reports/average/average.component.ts","webpack:///./src/app/admin/reports/billing/billing.component.ts","webpack:///./src/app/admin/reports/lots-report/lots-report.component.ts","webpack:///./src/app/admin/reports/reports.component.ts","webpack:///./src/app/admin/users-audit/users-audit.component.ts","webpack:///./src/app/admin/users/user-add.component.ts","webpack:///./src/app/admin/users/user-edit.component.ts","webpack:///./src/app/service/common.service.ts","webpack:///./src/app/admin/users/users.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/customer.ts","webpack:///./src/app/models/vehicle.ts","webpack:///./src/app/service/rent-type.service.ts","webpack:///./src/app/service/user-audit.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/dashboard/dashboard.component.ts","webpack:///./src/app/admin/datatable/datatable.component.ts","webpack:///./src/app/admin/user-group/user-group-add.component.ts","webpack:///./src/app/admin/user-group/user-group-edit.component.ts","webpack:///./src/app/admin/user-group/user-group.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/models/lot.ts","webpack:///./src/app/service/rent-status.service.ts","webpack:///./src/app/service/section.service.ts","webpack:///./src/app/service/authentication.service.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/dashboard/dashboard.component.css","webpack:///./src/app/admin/datatable/datatable.component.css","webpack:///./src/app/admin/lots/lots.component.css","webpack:///./src/app/admin/profile/profile.component.css","webpack:///./src/app/admin/reports/average/average.component.css","webpack:///./src/app/admin/reports/billing/billing.component.css","webpack:///./src/app/admin/reports/lots-report/lots-report.component.css","webpack:///./src/app/admin/reports/reports.component.css","webpack:///./src/app/service/rentlot.service.ts","webpack:///./src/app/admin/users-audit/users-audit.component.css","webpack:///./src/app/admin/users/users.component.css","webpack:///./src/app/app.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/dashboard/dashboard.component.html","webpack:///./src/app/service/user-group.service.ts","webpack:///./src/app/admin/datatable/datatable.component.html","webpack:///./src/app/admin/lots/lots.component.html","webpack:///./src/app/admin/parking/parking.component.html","webpack:///./src/app/admin/profile/profile.component.html","webpack:///./src/app/admin/reports/average/average.component.html","webpack:///./src/app/admin/reports/billing/billing.component.html","webpack:///./src/app/admin/reports/lots-report/lots-report.component.html","webpack:///./src/app/admin/reports/reports.component.html","webpack:///./src/app/admin/users-audit/users-audit.component.html","webpack:///./src/app/admin/users/users.component.html","webpack:///./src/app/service/user.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/service/vehicle.service.ts","webpack:///./src/app/models/pagination.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["export class User {\n    id: number;\n    firstName: string = \"\";\n    lastName: string = \"\";\n    email: string = \"\";\n    phoneNumber: string = \"\";\n    username: string = \"\";\n    password: string = \"\";\n    active: string = \"\";\n    lockUser: string = \"\";\n    userGroups: string = \"\";\n    files: string = \"\";\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/user.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { Brand } from '../models/brand';\n\n@Injectable()\nexport class BrandService {\n\n    brands: Observable<Brand[]>\n    private _brands: BehaviorSubject<Brand[]>;\n    private baseUrl: string;\n    private dataStore: {\n        brands: Brand[]\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.brand;\n        this.dataStore = { brands: [] };\n        this._brands = <BehaviorSubject<Brand[]>>new BehaviorSubject([]);\n        this.brands = this._brands.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.brands = data.items;\n              this._brands.next(Object.assign({}, this.dataStore).brands);\n            },\n              error => console.log('Could not load Brands.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    delete(id){}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/brand.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { Customer } from '../models/customer';\n\n@Injectable()\nexport class CustomerService {\n\n    customers: Observable<Customer[]>\n    private _customers: BehaviorSubject<Customer[]>;\n    private baseUrl: string;\n    private dataStore: {\n        customers: Customer[]\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.customer;\n        this.dataStore = { customers: [] };\n        this._customers = <BehaviorSubject<Customer[]>>new BehaviorSubject([]);\n        this.customers = this._customers.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.customers = data.items;\n              this._customers.next(Object.assign({}, this.dataStore).customers);\n            },\n              error => console.log('Could not load Customers.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    delete(id){}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/customer.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { Lot } from '../models/lot';\nimport { Pagination } from '../models/pagination';\n\n@Injectable()\nexport class LotService {\n\n    lots: Observable<Lot[]>;\n    pagination: Observable<Pagination>;\n    private _lots: BehaviorSubject<Lot[]>;\n    private _pagination: BehaviorSubject<Pagination>;\n    private baseUrl: string;\n    private dataStore: {\n        lots: Lot[],\n        pagination: Pagination\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.lot;\n        this.dataStore = { lots: [], pagination: new Pagination() };\n        this._lots = <BehaviorSubject<Lot[]>>new BehaviorSubject([]);\n        this._pagination = <BehaviorSubject<Pagination>>new BehaviorSubject(new Pagination());\n        this.lots = this._lots.asObservable();\n        this.pagination = this._pagination.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.lots = data.items;\n              this.dataStore.pagination = data.pagination;\n              this._lots.next(Object.assign({}, this.dataStore).lots);\n              this._pagination.next(Object.assign({}, this.dataStore).pagination);\n            },\n              error => console.log('Could not load Lots.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    delete(id){}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/lot.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { VehicleType } from '../models/vehicle-type';\n\n@Injectable()\nexport class VehicleTypeService {\n\n    vehiclesTypes: Observable<VehicleType[]>\n    private _vehiclesTypes: BehaviorSubject<VehicleType[]>;\n    private baseUrl: string;\n    private dataStore: {\n        vehiclesTypes: VehicleType[]\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.vehicleType;\n        this.dataStore = { vehiclesTypes: [] };\n        this._vehiclesTypes = <BehaviorSubject<VehicleType[]>>new BehaviorSubject([]);\n        this.vehiclesTypes = this._vehiclesTypes.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.vehiclesTypes = data.items;\n              this._vehiclesTypes.next(Object.assign({}, this.dataStore).vehiclesTypes);\n            },\n              error => console.log('Could not load VehicleTypes.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    delete(id){}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/vehicle-type.service.ts","const api ={\n    auth:'token',\n    brand:'brand',\n    user:'user',\n    userGroup:'user-group',\n    userAudit:'user-audit',\n    parking: 'parking',\n    customer: 'customer',\n    vehicle:'vehicle',\n    vehicleType:'vehicle-type',\n    lot:'lot',\n    section:'section',\n    rentLot:'rentlot',\n    rentType:'rent-type',\n    rentStatus:'rent-status'\n};\nexport const environment = {\n  production: true,\n  filesUrlBase:'http://nicolascuevas-tpp2017.9kode.com/parking/src/public/files/',\n  apiUrlBase:'http://nicolascuevas-tpp2017.9kode.com/parking/src/public/api/',\n  apiPaths: api\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  public user;\n  constructor(private auth: AuthenticationService,private router: Router, \n    private route: ActivatedRoute) {\n      this.user = auth.user;\n  }\n\n  ngOnInit() {\n  }\n  \n  logout(){\n      this.auth.logout();\n      this.router.navigate(['login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/admin.component.ts","import {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport {MdSnackBar} from '@angular/material';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { CompleterService, CompleterData } from 'ng2-completer';\n\nimport { Vehicle } from '../../models/vehicle';\nimport { VehicleType } from '../../models/vehicle-type';\nimport { Customer } from '../../models/customer';\nimport { Brand } from '../../models/brand';\n\nimport { CustomerService } from '../../service/customer.service';\nimport { VehicleService } from '../../service/vehicle.service';\nimport { VehicleTypeService } from '../../service/vehicle-type.service';\nimport { BrandService } from '../../service/brand.service';\n\n@Component({\n  selector: 'app-customer-add',\n  template: `\n  <div class=\"card\">\n  <h4 class=\"card-header\">Add Customer</h4>\n  <div class=\"card-body\">\n      <div>\n      <span class=\"app-toolbar-filler\"></span>\n      </div>\n        \n        <form [formGroup]=\"formView\" >\n          <!-- form inputs -->\n          <div class=\"row\">\n           <div class=\"col-md-4\">\n              <h3>Owner Data</h3>\n              <span class=\"app-toolbar-filler\"></span>\n              <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" id=\"firstName\" class=\"form-control\"\n                       formControlName=\"firstName\" >\n                 <div *ngIf=\"formErrors.firstName\" class=\"alert alert-danger\">\n                  {{ formErrors.firstName }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" id=\"lastName\" class=\"form-control\"\n                       formControlName=\"lastName\" >\n                 <div *ngIf=\"formErrors.lastName\" class=\"alert alert-danger\">\n                  {{ formErrors.lastName }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"phoneNumber\">Phone</label>\n                <input type=\"text\" id=\"phoneNumber\" class=\"form-control\"\n                       formControlName=\"phoneNumber\" >\n                 <div *ngIf=\"formErrors.phoneNumber\" class=\"alert alert-danger\">\n                  {{ formErrors.phoneNumber }}\n                  </div>\n              </div>\n           </div>\n\n           <div class=\"col-md-4\">\n             <h3>Vehicle</h3>\n             <span class=\"app-toolbar-filler\"></span>\n              <div class=\"form-group\">\n                <label for=\"plate\">Plate</label>\n                <input type=\"text\" id=\"plate\" class=\"form-control\"\n                       formControlName=\"plate\" required >\n                 <div *ngIf=\"formErrors.plate\" class=\"alert alert-danger\">\n                  {{ formErrors.plate }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"brand\">Brand</label>\n                  <select class=\"form-control\" formControlName=\"brand\" required>\n                    <option *ngFor=\"let group of brand|async\" [value]=\"group.id\">{{ group.name }}</option>\n                  </select>\n                  <div *ngIf=\"formErrors.brand\" class=\"alert alert-danger\">\n                  {{ formErrors.brand }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"color\">Color</label>\n                <input type=\"color\" id=\"color\" class=\"form-control\"\n                       formControlName=\"color\" required >\n                 <div *ngIf=\"formErrors.color\" class=\"alert alert-danger\">\n                  {{ formErrors.color }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"vehicleType\">Type</label>\n                  <select class=\"form-control\" formControlName=\"vehicleType\" required>\n                    <option *ngFor=\"let group of vehicleType|async\" [value]=\"group.id\">{{ group.name }}</option>\n                  </select>\n                  <div *ngIf=\"formErrors.vehicleType\" class=\"alert alert-danger\">\n                  {{ formErrors.vehicleType }}\n                  </div>\n              </div>\n            </div>\n            <!-- end form inputs -->\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <div class=\"form-group\">\n               <button class=\"pull-right\" md-raised-button  color=\"accent\" [disabled]=\"!formView.valid\" (click)=\"save()\">Save</button>\n               <button class=\"pull-left\" md-raised-button color=\"primary\" (click)=\"back()\">Cancel</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      <div>\n      \n      </div>\n  </div>\n  </div>\n  `,\n  styles: []\n})\nexport class CustomerAddComponent implements OnInit {\n\n  public customer: Customer;\n  public vehicle: Vehicle;\n  public vehicleType;\n  public brand;\n  public formView: FormGroup;\n\n  constructor(private customerService: CustomerService,\n    private vehicleService: VehicleService,\n    private vehicleTypeService: VehicleTypeService,\n    private brandService: BrandService,\n    private fb: FormBuilder,\n    public snackBar: MdSnackBar,\n    private router: Router, private route: ActivatedRoute, \n    private location: Location) {\n    this.customer = new Customer();\n    this.vehicle = new Vehicle();\n    this.vehicleType = this.vehicleTypeService.vehiclesTypes;\n    this.brand = this.brandService.brands;\n  }\n\n  ngOnInit() {\n    this.vehicleTypeService.getList();\n    this.brandService.getList();\n    this.buildForm();\n  }\n\n  save(){\n    let payload = this.formView.value;\n    this.vehicleService.create(payload)\n            .subscribe(data => {\n              let snackBarRef = this.snackBar.open(\n                data.message,\"OK\",{\n                duration: 2000,\n              });\n              if(data.response==='ok'){\n                this.formView.reset();\n                snackBarRef.afterDismissed().subscribe(() => {\n                  this.location.back();\n                });\n              }\n            },\n              error => console.log('Could not create the customer.'),\n              () => console.log(\"done\")\n            );\n  }\n\n\n\n \n  back(){\n    this.location.back();\n  }\n  \n  buildForm(): void {\n    this.formView = this.fb.group({\n      'firstName': [this.customer.firstName, [\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]\n      ],\n      'lastName':[this.customer.lastName, [\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]],\n      'phoneNumber':[this.customer.phoneNumber,[\n        Validators.minLength(9),\n        Validators.maxLength(30)\n      ]],\n      'plate':[this.vehicle.plate,[\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(12)\n        ]],\n      'brand':[this.vehicle.brand,[Validators.required]],\n      'color':[this.vehicle.color,[Validators.required]],\n      'vehicleType':[this.vehicle.vehicleType,[Validators.required]],\n    });\n\n    this.formView.valueChanges\n      .subscribe(data => this.onValueChanged(data));\n\n    this.onValueChanged(); // (re)set validation messages now\n  }\n\n\n  onValueChanged(data?: any) {\n    if (!this.formView) { return; }\n    const form = this.formView;\n\n    for (const field in this.formErrors) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && control.dirty && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key in control.errors) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  formErrors = {\n    'firstName': '',\n    'lastName': '',\n    'phoneNumber': '',\n    'plate': '',\n    'brand': '',\n    'color': '',\n    'vehicleType': '',\n  };\n\n  validationMessages = {\n    'firstName': {\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength': 'cannot be more than 24 characters long.'\n    },\n    'lastName':{\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength':     'cannot be more than 24 characters long.'\n    },\n    'phoneNumber':{\n       'minlength': 'must be at least 9 characters long.',\n      'maxlength':     'cannot be more than 30 characters long.'\n    },\n    'plate':{\n      'required': 'required field',\n      'minlength': 'must be at least 3 characters long.',\n      'maxlength':     'cannot be more than 12 characters long.'\n    },\n    'color':{'required':'required field'},\n    'brand':{'required':'required field'},\n    'vehicleType':{'required':'required field'},\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/customer/customer-add.component.ts","import {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport {MdSnackBar} from '@angular/material';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { CompleterService, CompleterData } from 'ng2-completer';\n\nimport { Vehicle } from '../../models/vehicle';\nimport { VehicleType } from '../../models/vehicle-type';\nimport { Customer } from '../../models/customer';\nimport { Brand } from '../../models/brand';\n\nimport { CustomerService } from '../../service/customer.service';\nimport { VehicleService } from '../../service/vehicle.service';\nimport { VehicleTypeService } from '../../service/vehicle-type.service';\nimport { BrandService } from '../../service/brand.service';\n\n@Component({\n  selector: 'app-customer-edit',\n  template: `\n    <div class=\"card\">\n      <h4 class=\"card-header\">Add Customer</h4>\n      <div class=\"card-body\">\n      <div>\n      <span class=\"app-toolbar-filler\"></span>\n      </div>\n        <md-spinner *ngIf=\"!showForm\" class=\"app-spinner\"></md-spinner>\n        <form *ngIf=\"showForm\" [formGroup]=\"formView\" >\n          <!-- form inputs -->\n          <div class=\"row\">\n           <div class=\"col-md-4\">\n              <h3>Owner Data</h3>\n              <span class=\"app-toolbar-filler\"></span>\n              <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" id=\"firstName\" class=\"form-control\"\n                       formControlName=\"firstName\" >\n                 <div *ngIf=\"formErrors.firstName\" class=\"alert alert-danger\">\n                  {{ formErrors.firstName }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" id=\"lastName\" class=\"form-control\"\n                       formControlName=\"lastName\" >\n                 <div *ngIf=\"formErrors.lastName\" class=\"alert alert-danger\">\n                  {{ formErrors.lastName }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"phoneNumber\">Phone</label>\n                <input type=\"text\" id=\"phoneNumber\" class=\"form-control\"\n                       formControlName=\"phoneNumber\" >\n                 <div *ngIf=\"formErrors.phoneNumber\" class=\"alert alert-danger\">\n                  {{ formErrors.phoneNumber }}\n                  </div>\n              </div>\n           </div>\n\n           <div class=\"col-md-4\">\n             <h3>Vehicle</h3>\n             <span class=\"app-toolbar-filler\"></span>\n              <div class=\"form-group\">\n                <label for=\"plate\">Plate</label>\n                <input type=\"text\" id=\"plate\" class=\"form-control\"\n                       formControlName=\"plate\" required >\n                 <div *ngIf=\"formErrors.plate\" class=\"alert alert-danger\">\n                  {{ formErrors.plate }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"brand\">Brand</label>\n                  <select class=\"form-control\" formControlName=\"brand\" required>\n                    <option *ngFor=\"let group of brand|async\" [value]=\"group.id\">{{ group.name }}</option>\n                  </select>\n                  <div *ngIf=\"formErrors.brand\" class=\"alert alert-danger\">\n                  {{ formErrors.brand }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"color\">Color</label>\n                <input type=\"color\" id=\"color\" class=\"form-control\"\n                       formControlName=\"color\" required >\n                 <div *ngIf=\"formErrors.color\" class=\"alert alert-danger\">\n                  {{ formErrors.color }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"vehicleType\">Type</label>\n                  <select class=\"form-control\" formControlName=\"vehicleType\" required>\n                    <option *ngFor=\"let group of vehicleType|async\" [value]=\"group.id\">{{ group.name }}</option>\n                  </select>\n                  <div *ngIf=\"formErrors.vehicleType\" class=\"alert alert-danger\">\n                  {{ formErrors.vehicleType }}\n                  </div>\n              </div>\n            </div>\n            <!-- end form inputs -->\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <div class=\"form-group\">\n               <button class=\"pull-right\" md-raised-button  color=\"accent\" [disabled]=\"!formView.valid\" (click)=\"save()\">Save</button>\n               <button class=\"pull-left\" md-raised-button color=\"primary\" (click)=\"back()\">Cancel</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      <div>\n      \n      </div>\n    </div>\n  </div>\n  `,\n  styles: []\n})\nexport class CustomerEditComponent implements OnInit {\n  public id;\n  public customer: Customer;\n  public vehicle: Vehicle;\n  public vehicleType;\n  public brand;\n  public formView: FormGroup;\n  public showForm;\n\n  constructor(private customerService: CustomerService,\n    private vehicleService: VehicleService,\n    private vehicleTypeService: VehicleTypeService,\n    private brandService: BrandService,\n    private fb: FormBuilder,\n    public snackBar: MdSnackBar,\n    private router: Router, private route: ActivatedRoute, \n    private location: Location) {\n    this.showForm = false;\n    this.customer = new Customer();\n    this.vehicle = new Vehicle();\n    this.vehicleType = this.vehicleTypeService.vehiclesTypes;\n    this.brand = this.brandService.brands;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = +params['id'];\n      this.vehicleTypeService.getList();\n      this.brandService.getList({offset:0, limit:100, orderby:null, where:null});\n      this.buildForm();\n      this.vehicleService.get(this.id).subscribe(data => {\n                this.formView.setValue({\n                  'firstName': data.customer.firstName,\n                  'lastName': data.customer.lastName,\n                  'phoneNumber': data.customer.phoneNumber,\n                  'plate': data.plate,\n                  'color': data.color,\n                  'brand': data.brand.id,\n                  'vehicleType':data.vehicleType.id\n                });\n                this.showForm = true;\n              },\n                error => {\n                  console.log('Could not load Users.');\n                  this.location.back();\n                }\n              );\n    });\n  }\n\n  save(){\n    let payload = this.formView.value;\n    this.vehicleService.update(this.id, payload)\n            .subscribe(data => {\n              let snackBarRef = this.snackBar.open(\n                data.message,\"OK\",{\n                duration: 2000,\n              });\n              if(data.response==='ok'){\n                this.formView.reset();\n                snackBarRef.afterDismissed().subscribe(() => {\n                  this.location.back();\n                });\n              }\n            },\n              error => console.log('Could not create the customer.'),\n              () => console.log(\"done\")\n            );\n  }\n\n\n\n \n  back(){\n    this.location.back();\n  }\n  \n  buildForm(): void {\n    this.formView = this.fb.group({\n      'firstName': [this.customer.firstName, [\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]\n      ],\n      'lastName':[this.customer.lastName, [\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]],\n      'phoneNumber':[this.customer.phoneNumber,[\n        Validators.minLength(9),\n        Validators.maxLength(30)\n      ]],\n      'plate':[this.vehicle.plate,[\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(12)\n        ]],\n      'brand':[this.vehicle.brand,[Validators.required]],\n      'color':[this.vehicle.color,[Validators.required]],\n      'vehicleType':[this.vehicle.vehicleType,[Validators.required]],\n    });\n\n    this.formView.valueChanges\n      .subscribe(data => this.onValueChanged(data));\n\n    this.onValueChanged(); // (re)set validation messages now\n  }\n\n\n  onValueChanged(data?: any) {\n    if (!this.formView) { return; }\n    const form = this.formView;\n\n    for (const field in this.formErrors) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && control.dirty && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key in control.errors) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  formErrors = {\n    'firstName': '',\n    'lastName': '',\n    'phoneNumber': '',\n    'plate': '',\n    'brand': '',\n    'color': '',\n    'vehicleType': '',\n  };\n\n  validationMessages = {\n    'firstName': {\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength': 'cannot be more than 24 characters long.'\n    },\n    'lastName':{\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength':     'cannot be more than 24 characters long.'\n    },\n    'phoneNumber':{\n       'minlength': 'must be at least 9 characters long.',\n      'maxlength':     'cannot be more than 30 characters long.'\n    },\n    'plate':{\n      'required': 'required field',\n      'minlength': 'must be at least 3 characters long.',\n      'maxlength':     'cannot be more than 12 characters long.'\n    },\n    'color':{'required':'required field'},\n    'brand':{'required':'required field'},\n    'vehicleType':{'required':'required field'},\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/customer/customer-edit.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { VehicleService } from '../../service/vehicle.service';\nimport { Vehicle } from '../../models/vehicle';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-customer',\n  template: `\n  <div class=\"card\">\n  <h4 class=\"card-header\">Customers</h4>\n  <div class=\"card-body\">\n    <ngx-datatable\n        class=\"material\"\n        [columnMode]=\"'flex'\"\n        [rows]=\" vehicles | async \"\n        [headerHeight]=\"40\"\n        [rowHeight]=\"'auto'\">\n        <ngx-datatable-column name=\"id\" [flexGrow]=\"1\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"customer\" [flexGrow]=\"1\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{value.firstName}} {{value.lastName}}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"plate\" [flexGrow]=\"1\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"brand\" [flexGrow]=\"1\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{value.name}}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"vehicleType\" [flexGrow]=\"1\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{value.name}}\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Action\" [flexGrow]=\"1\">\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\n            <button md-raised-button color=\"accent\" (click)=\"edit(row['id'])\"><i class=\"material-icons\">mode_edit</i></button>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n      <ngb-pagination \n        class=\"\"\n        [collectionSize]=\"pagination.total_items\" \n        [(page)]=\"page\" \n        [pageSize]=\"pagination.limit\"\n        [rotate]=\"true\" \n        [ellipses]=\"false\" \n        [boundaryLinks]=\"true\"\n        (pageChange)=\"setPage(page)\">\n      </ngb-pagination>\n       <span class=\"app-action\">\n          <button md-fab (click)=\"add()\"><md-icon>add circle</md-icon></button>\n        </span>\n      </div>\n</div>\n  `,\n  styles: []\n})\nexport class CustomerComponent implements OnInit {\n\n  public vehicles;\n  public pagination;\n  public page : number = 1;\n\n  constructor(private vehicleService: VehicleService, private router: Router, \n    private route: ActivatedRoute) {\n\n    }\n\n  ngOnInit() {\n      this.vehicles = this.vehicleService.vehicles;\n      this.vehicleService.getList({\n        offset:0,\n        limit:8,\n        orderby:{field: \"createdAt\", type:\"desc\"},\n        where:null\n      });\n      this.vehicleService.pagination.subscribe(value => this.pagination = value);\n  }\n\n  edit(id){\n    this.router.navigate(['edit/', id], { relativeTo: this.route });\n  }\n\n  add(){\n    this.router.navigate(['add'], { relativeTo: this.route });\n  }\n\n  \n  setPage(page){\n    this.vehicleService.getList({\n      offset:page-1,\n      limit:this.pagination.limit,\n      orderby:null,\n      where:null\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/customer/customer.component.ts","import { Component, OnInit } from '@angular/core';\nimport { LotService } from '../../service/lot.service';\nimport { MdSnackBar } from '@angular/material';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Lot } from '../../models/lot';\n\n@Component({\n  selector: 'app-lots',\n  templateUrl: './lots.component.html',\n  styleUrls: ['./lots.component.css']\n})\nexport class LotsComponent implements OnInit {\n\n  public lots;\n  public lot;\n  public selectedLot;\n  public formView: FormGroup;\n  public pagination;\n  public page : number = 1;\n\n  constructor(private lotService: LotService,private fb: FormBuilder, public snackBar: MdSnackBar,) {\n      this.lots = this.lotService.lots;\n      this.lot = new Lot();\n  }\n\n  ngOnInit() {\n    this.lotService.getList({offset:0, limit:8, orderby:null, where:null});\n    this.lotService.pagination.subscribe(value => {this.pagination = value;console.log(value);});\n    this.buildForm();\n  }\n\n  setPage(page){\n    this.lotService.getList(\n      {\n        offset:page-1, \n        limit:this.pagination.limit,\n        orderby:null,\n        where:null\n      });\n  }\n\n  selectLot(lot){\n    this.selectedLot = lot;\n    this.formView.setValue({\n        'reference': this.selectedLot.reference,\n        'description': this.selectedLot.description,\n        'available': this.selectedLot.available,\n        'reserved': this.selectedLot.reserved\n    });\n  }\n\n  save(){\n    this.lot = this.formView.value;\n    this.lotService.update(this.selectedLot.id, this.lot)\n            .subscribe(data => {\n              let snackBarRef = this.snackBar.open(\n                data.message,\"OK\",{\n                duration: 2000,\n              });\n              if(data.response==='ok'){\n                this.formView.reset();\n                snackBarRef.afterDismissed().subscribe(() => {\n                  this.ngOnInit();\n                  this.back();\n                });\n              }\n            },\n              error => console.log('Object not updated.'),\n              () => console.log(\"done\")\n            );\n  }\n\n  back(){\n    this.selectedLot = null;\n  }\n\n  buildForm(): void {\n    this.formView = this.fb.group({\n      'reference': ['', [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]\n      ],\n      'description':['', [\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]],\n      'available': '',\n      'reserved': ''\n    });\n    this.formView.valueChanges\n      .subscribe(data => this.onValueChanged(data));\n    this.onValueChanged(); // (re)set validation messages now\n  }\n\n  onValueChanged(data?: any) {\n    console.log(data);\n    console.log(this.formView);\n    if (!this.formView) { return; }\n    const form = this.formView;\n    for (const field in this.formErrors) {\n      this.formErrors[field] = '';\n      const control = form.get(field);\n      if (control && control.dirty && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key in control.errors) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  formErrors = {\n    'reference': ''\n  };\n\n  validationMessages = {\n    'firstName': {\n      'required':  'required field',\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength': 'cannot be more than 24 characters long.'\n    },\n    'description':{\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength':     'cannot be more than 24 characters long.'\n    }\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/lots/lots.component.ts","import {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {MdSnackBar} from '@angular/material';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { Observable } from \"rxjs\";\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\n\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\n\nimport { Vehicle } from '../../models/vehicle';\n\nimport { VehicleService } from '../../service/vehicle.service';\nimport { LotService } from '../../service/lot.service';\nimport { RentTypeService } from '../../service/rent-type.service';\nimport { RentLotService } from '../../service/rentlot.service';\n\n\n@Component({\n  selector: 'app-parking',\n  templateUrl:'./parking.component.html',\n  styles: [\n  `\n    h1 {\n      margin: 1em 0 .5em;\n    }\n\n    h3 {\n      color: #444;\n      border-bottom: 1px solid #efefef;\n      margin: 1em 0 1em;\n    }\n\n    .mt-10{\n      margin-top: 5%;\n    }\n    .form-group:last-child {\n      margin-bottom: 0;\n    }\n\n    .card-block {\n      background-color: #f7f5f2;\n    }\n\n    :host {\n      padding: 5em 0;\n    }\n\n    :host >>> .match {\n      color: #3F51B4;\n    }\n\n    .completer-limit /deep/ .completer-dropdown {\n      max-height: 20rem;\n    }\n\n    .chevron {\n      padding-top: 40%;\n    }\n\n    .chevron-holder {\n      position: absolute;\n      height: 100%;\n      border: 1px solid rgba(0,0,0,.15);\n      border-top-color: rgba(0, 0, 0, 0.14902);\n      background-color: white;\n      border-radius: 25%;\n      border-bottom-left-radius: 0;\n      border-top-left-radius: 0;\n      border-left: 0;\n    }\n\n    .chevron-holder.dropdown-open {\n      border-color: #5cb3fd;\n    }\n\n    .with-chevron /deep/ .completer-input {\n      border-right: 0;\n      border-bottom-right-radius: 0;\n      border-top-right-radius: 0;\n    }`\n  ]\n})\nexport class ParkingComponent implements OnInit, OnDestroy {\n\n  public id;\n  public vehicle;\n  public lots;\n  public rentlots;\n  public rentLotsTypes;\n  public selectedVehicle;\n  public selectedLot;\n  public selectedRentLotType;\n  public selectedRentlot;\n  public formView: FormGroup;\n  public searchForm;\n  public checkOutSearchForm;\n  public checkinForm;\n  public checkoutForm;\n  public rentLotTypeForm;\n  public showDetail;\n  public paymentDetail;\n\n  public pagination;\n  public page : number = 1;\n\n  public paginationRentLot;\n  public pageRentLot : number = 1;\n\n  protected searchStr: string;\n  protected dataService: CompleterData;\n  protected searchData = [];\n\n  protected paymentAmounts = {\n    month: {price:5100, time:720},\n    day: {price:170, time:24},\n    halfday: {price:90, time:12},\n    hour: {price:10, time:1}\n  };\n\n  public model: any;\n  public tabIndex: any;\n  searching = false;\n  searchFailed = false;\n  hideSearchingWhenUnsubscribed = new Observable(() => () => this.searching = false);\n\n\n  constructor(private vehicleService: VehicleService,\n    private lotService: LotService,\n    private rentTypeService: RentTypeService,\n    private rentLotService: RentLotService,\n    private fb: FormBuilder,\n    private completerService: CompleterService,\n    public snackBar: MdSnackBar,\n    private router: Router, private route: ActivatedRoute, \n    private location: Location) {\n    this.searchForm = true;\n    this.checkOutSearchForm = true;\n    this.checkinForm = false;\n    this.checkoutForm = false;\n    this.rentLotTypeForm = false;\n    this.showDetail = false;\n    this.paymentDetail = false;\n    this.lots = this.lotService.lots;\n    this.pagination = this.lotService.pagination;\n    this.rentLotsTypes = this.rentTypeService.rentsTypes;\n    this.rentlots = this.rentLotService.rentlots;\n    this.paginationRentLot = this.rentLotService.pagination;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n\n  }\n\n  formatter = (result: any) => {  \n    return result.plate;\n  };\n\n  search = (text$: Observable<string>) =>\n    text$\n      .debounceTime(300)\n        .distinctUntilChanged()\n        .do(() => this.searching = true)\n        .switchMap(term => {\n          let source = this.vehicleService.search({\n            limit:5,\n            offset:0,\n            orderby:{field:'plate',type:'asc'},\n            where:{field:'plate',value:term}\n          })\n            .do(() => this.searchFailed = false)\n            .catch(() => {\n              this.searchFailed = true;\n              return Observable.of([]);\n            })\n            .map((res: any) => res.items);\n            return source;\n          })\n        .do(() => this.searching = false)\n        .merge(this.hideSearchingWhenUnsubscribed);\n  \n  selectItem(e){\n    if(e && e.plate){\n      this.vehicle = [e];\n      this.selectedVehicle = e;\n    }\n  }\n\n  onSelected(selected: CompleterItem){\n    if(selected){\n      this.vehicle = [selected.originalObject];\n      this.selectedVehicle = selected.originalObject;\n    }\n  }\n\n  showCheckin(){\n    this.lotService.getList({offset:0, limit:8, orderby:null, where:null});\n    this.lotService.pagination.subscribe(value => {this.pagination = value;console.log(value);});\n    this.searchForm = false;\n    this.checkinForm = true;\n  }\n  \n  selectLot(lot){\n    this.rentTypeService.getList();\n    this.selectedLot = lot;\n    this.checkinForm = false;\n    this.rentLotTypeForm = true;\n  }\n\n  selectRentTypeLot(){\n    this.rentLotTypeForm = false;\n    this.showDetail = true;\n  }\n  \n  backSearchForm(){\n    this.searchForm = true;\n    this.checkinForm = false;\n  }\n\n  backCheckInForm(){\n    this.rentLotTypeForm = false;\n    this.checkinForm = true;\n  }\n\n  checkin(){\n    let payload = {\n      vehicle: this.selectedVehicle.id,\n      lot: this.selectedLot.id,\n      rentType: this.selectedRentLotType\n    };\n    this.rentLotService.create(payload)\n            .subscribe(data => {\n              let snackBarRef = this.snackBar.open(\n                data.message,\"OK\",{\n                duration: 2000,\n              });\n              if(data.response==='ok'){\n                snackBarRef.afterDismissed().subscribe(() => {\n                  this.clear();\n                });\n              }\n            },\n              error => console.log('Could not create Rentlot.'),\n              () => console.log(\"done\")\n            );\n  }\n  \n  clear(){\n    this.searchForm = true;\n    this.checkOutSearchForm = true;\n    this.checkinForm = false;\n    this.checkoutForm = false;\n    this.rentLotTypeForm = false;\n    this.showDetail = false;\n    this.paymentDetail = false;\n    this.lots = this.lotService.lots;\n    this.dataService = this.completerService.local(\n        null,\n        'plate',\n        'plate'\n        );\n    this.vehicle = null;\n    this.selectedVehicle = null;\n    this.selectedRentLotType = null;\n    this.selectedRentlot = null;\n  }\n\n  getRentedLotes(event){\n    this.clear();\n    if(event.tab && event.tab.textLabel==='RENTED'){\n      this.rentLotService.getList({offset:0, limit:5, \n        orderby:{field:'rentlot.id',type:'asc'},\n        where:{filters:[{field:'rentStatus.id', value:1, type:'eq'}]}});\n    }\n    this.rentLotService.pagination.subscribe(value => this.paginationRentLot = value);\n  }\n\n  showCheckout(rentlot){\n    this.rentLotService.getList({offset:0, limit:20, orderby:{field:'rentlot.id',type:'asc'},\n        where:{filters:[{field:'vehicle.id', value:rentlot.id, type:'eq'},\n        {field:'rentStatus.id', value:1, type:'eq'}]}});\n    this.checkOutSearchForm = false;\n    this.checkoutForm = true;\n  }\n  \n  backSearchCheckout(){\n    this.checkoutForm = false;\n    this.checkOutSearchForm = true;\n  }\n\n  backCheckOut(){\n    this.paymentDetail = false;\n    this.checkoutForm = true;\n  }\n\n  calcAmount(rentlot){\n      let amount = 0,\n      d2 = new Date(),\n      d1 = new Date(rentlot.createdAt.date+rentlot.createdAt.timezone),\n      dateDiff = (d2.valueOf() - d1.valueOf())/1000/60/60,\n      totalTime = dateDiff < 1 ? 1 : parseFloat(dateDiff.toFixed(2)),\n      price = this.paymentAmounts[rentlot.rentType.name].price,\n      time = this.paymentAmounts[rentlot.rentType.name].time,\n      hprice = this.paymentAmounts['hour'].price;\n\n      if(rentlot.rentType.name!=\"hour\"){\n        let t = time > totalTime ;\n        console.log(time,totalTime,t);\n        amount = time < totalTime ?  price + hprice * (totalTime - time) : price ;\n      }else{\n        amount =  hprice * totalTime;\n      }\n      \n\n      rentlot.payment.amount = parseFloat(amount.toFixed(2));\n      rentlot.startTime = d1;\n      rentlot.currentTime = d2;\n      rentlot.totalHours = totalTime;\n\n      return rentlot;\n  }\n\n  showRentLotDetail(rentlot){\n    this.selectedRentlot = this.calcAmount(rentlot);\n  }\n\n  selectRentLot(rentlot){\n    this.selectedRentlot = this.calcAmount(rentlot);\n    this.checkoutForm = false;\n    this.paymentDetail = true;\n  }\n\n  checkout(){\n    let payload = {\n      rentlot: this.selectedRentlot.id,\n      amount: this.selectedRentlot.payment.amount,\n      endTime: this.selectedRentlot.currentTime,\n      paymentStatus: 2,\n      rentStatus: 2,\n      lot:{available:true}\n    };\n\n    this.rentLotService.update(this.selectedRentlot.id,payload)\n            .subscribe(data => {\n              let snackBarRef = this.snackBar.open(\n                data.message,\"OK\",{\n                duration: 2000,\n              });\n              if(data.response==='ok'){\n                snackBarRef.afterDismissed().subscribe(() => {\n                  this.clear();\n                });\n              }\n            },\n              error => console.log('Could not update Rentlot.'),\n              () => console.log(\"done\")\n            );\n  }\n\n  setPage(page){\n    this.lotService.getList(\n      {\n        offset:page-1, \n        limit:this.pagination.limit,\n        orderby:null,\n        where:null\n      });\n  }\n\n  setPageRentLot(page){\n    this.rentLotService.getList({offset:page-1, limit:this.paginationRentLot.limit, \n        orderby:{field:'rentlot.id',type:'asc'},\n        where:{filters:[{field:'rentStatus.id', value:1, type:'eq'}]}});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/parking/parking.component.ts","import {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport {MdSnackBar} from '@angular/material';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { UserGroup } from '../../models/user-group';\nimport { User } from '../../models/user';\n\nimport { UserGroupService } from '../../service/user-group.service';\nimport { UserService } from '../../service/user.service';\nimport { AuthenticationService } from '../../service/authentication.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  public id;\n  public groups;\n  public user: User;\n  public formView: FormGroup;\n  public showForm;\n  public file: any;\n\n  constructor(private userService: UserService, private groupService: UserGroupService,\n    private auth: AuthenticationService, private fb: FormBuilder,\n    public snackBar: MdSnackBar, private router: Router, private route: ActivatedRoute, \n    private location: Location) {\n    this.showForm = false;\n    this.groups = this.groupService.groups;\n    this.user = new User();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n       this.id = this.auth.user.id;\n       this.groupService.getList();\n       this.buildForm();\n       this.userService.get(this.id).subscribe(data => {\n              this.formView.setValue({\n                'firstName': data.firstName,\n                'lastName':data.lastName,\n                'email':data.email,\n                'phoneNumber':data.phoneNumber,\n                'username':data.username,\n                'password':data.password,\n                'active':data.active,\n                'lockUser':data.lockUser,\n                'userGroups':data.userGroups[0].id\n              });\n              this.showForm = true;\n            },\n              error => {\n                console.log('Could not load User.');\n                this.location.back();\n              }\n            );\n       \n       \n    });\n    \n  }\n\n\n  save(){\n    this.user = this.formView.value;\n    this.userService.update(this.id, this.user)\n            .subscribe(data => {\n              let snackBarRef = this.snackBar.open(\n                data.message,\"OK\",{\n                duration: 2000,\n              });\n              if(data.response==='ok'){\n                this.formView.reset();\n                snackBarRef.afterDismissed().subscribe(() => {\n                  this.location.back();\n                });\n              }\n            },\n              error => console.log('Could not create the user.'),\n              () => console.log(\"done\")\n            );\n  }\n  \n\n  setPhoto($e){\n    this.file = $e.target.files[0];\n  }\n\n  savePhoto(){\n    this.userService.upload(this.id,this.file);\n  }\n\n  back(){\n    this.location.back();\n  }\n  \n  buildForm(): void {\n    console.log(this.user);\n    this.formView = this.fb.group({\n      'firstName': [this.user.firstName, [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]\n      ],\n      'lastName':[this.user.lastName, [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]],\n      'email':[this.user.email,[Validators.required]],\n      'phoneNumber':[this.user.phoneNumber,[Validators.required]],\n      'username':[this.user.username,[Validators.required]],\n      'password':[this.user.password,[Validators.required]],\n      'active': '',\n      'lockUser': '',\n      'userGroups':[this.user.userGroups,[Validators.required]]\n    });\n\n    this.formView.valueChanges\n      .subscribe(data => this.onValueChanged(data));\n\n    this.onValueChanged(); // (re)set validation messages now\n  }\n\n\n  onValueChanged(data?: any) {\n    console.log(data);\n    console.log(this.formView);\n    if (!this.formView) { return; }\n    const form = this.formView;\n\n    for (const field in this.formErrors) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && control.dirty && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key in control.errors) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  formErrors = {\n    'firstName': '',\n    'lastName': '',\n    'email': '',\n    'phoneNumber': '',\n    'username': '',\n    'password': '',\n    'userGroups': ''\n  };\n\n  validationMessages = {\n    'firstName': {\n      'required':  'required field',\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength': 'cannot be more than 24 characters long.'\n    },\n    'lastName':{\n      'required': 'required field',\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength':     'cannot be more than 24 characters long.'\n    },\n    'email':{'required':'required field'},\n    'phoneNumber':{'required':'required field'},\n    'username':{'required':'required field'},\n    'password':{'required':'required field'},\n    'userGroups':{'required':'required field'}\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/profile/profile.component.ts","import { Component, OnInit } from '@angular/core';\nimport { RentLotService } from '../../../service/rentlot.service';\nimport { environment } from '../../../../environments/environment';\n\nimport {NgbDateStruct, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-average',\n  templateUrl: './average.component.html',\n  styleUrls: ['./average.component.css']\n})\nexport class AverageComponent implements OnInit {\n\n  public vehiclesRow : any = null;\n  public vehiclesPage : number = 1;\n  public vehicles : any = {total_items:0, rows:[]};\n\n  public lotsRow : any = null;\n  public lotsPage : number = 1;\n  public lots : any = {total_items:0, rows:[]};\n\n  public fromDate;\n  public toDate;\n  public totalAmountAverage;\n\n  public reportUrl;\n\n  constructor(private rentLotService: RentLotService, calendar: NgbCalendar) {\n      this.fromDate = calendar.getNext(calendar.getToday(), 'd', -30);\n      this.toDate = calendar.getToday();\n      this.reportUrl = null;\n  }\n\n  buildTable(list){\n      let data = {total_items:0, rows:[]}\n      if(list){\n          let limit = list.length/5,\n          arrayList = [],\n          begin = 0,\n          end = 5;\n          for (var i = 0; i < limit; i++) {\n              arrayList.push(list.slice(begin,end));\n              begin = end;\n              end+= 5;\n          }\n          data = {total_items:list.length, rows:arrayList}\n      }\n      return data;\n  }\n\n  getReportData(){\n      let fromDate = this.fromDate.year+'-'+this.fromDate.month+'-'+this.fromDate.day,\n      toDate = this.toDate.year+'-'+this.toDate.month+'-'+this.toDate.day;\n      let filters = [\n          {field:'rentlot.startTime', value:fromDate, type:'gte', format:'date'},\n          {field:'rentlot.startTime', value:toDate, type:'lte', format:'date'},\n      ];\n\n      this.rentLotService.getAverageReportingData(\n          {where:{filters:filters}}\n        )\n      .subscribe(value => {\n          this.vehicles = this.buildTable(value.vehicles);\n          this.vehiclesRow = this.vehicles.rows[0];\n          this.vehiclesPage = 1;\n          this.totalAmountAverage = value.total_amount_average;\n          this.lots = this.buildTable(value.lots);\n          this.lotsRow = this.lots.rows[0];\n          this.lotsPage = 1;\n      });\n  }\n\n  download(){\n      let fromDate = this.fromDate.year+'-'+this.fromDate.month+'-'+this.fromDate.day,\n      toDate = this.toDate.year+'-'+this.toDate.month+'-'+this.toDate.day;\n      let filters = [\n          {field:'rentlot.startTime', value:fromDate, type:'gte', format:'date'},\n          {field:'rentlot.startTime', value:toDate, type:'lte', format:'date'},\n      ];\n\n      this.rentLotService.getAverageReportingData(\n          {where:{filters:filters},format:'pdf'}\n        )\n      .subscribe(value => {\n          this.reportUrl = environment.filesUrlBase + '/' + value;\n      });\n  }\n\n  ngOnInit() {\n      this.getReportData();\n  }\n\n  setVehiclesPage(page){\n    this.vehiclesRow = this.vehicles.rows[page-1];\n  }\n\n  applyFilters(){\n      this.getReportData();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/reports/average/average.component.ts","import { Component, OnInit } from '@angular/core';\nimport { RentLotService } from '../../../service/rentlot.service';\n\nimport { environment } from '../../../../environments/environment';\n\nimport {NgbDateStruct, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-billing',\n  templateUrl: './billing.component.html',\n  styleUrls: ['./billing.component.css']\n})\nexport class BillingComponent implements OnInit {\n\n  public vehiclesRow : any = null;\n  public vehiclesPage : number = 1;\n  public vehicles : any = {total_items:0, rows:[]};\n\n  public fromDate;\n  public toDate;\n  public reservedLots;\n  public showAll;\n\n  public reportUrl;\n\n  constructor(private rentLotService: RentLotService, calendar: NgbCalendar) {\n      this.fromDate = calendar.getNext(calendar.getToday(), 'd', -30);\n      this.toDate = calendar.getToday();\n      this.reportUrl = null;\n  }\n\n  buildTable(list){\n      let data = {total_items:0, rows:[]}\n      if(list){\n          let limit = list.length/5,\n          arrayList = [],\n          begin = 0,\n          end = 5;\n          for (var i = 0; i < limit; i++) {\n              arrayList.push(list.slice(begin,end));\n              begin = end;\n              end+= 5;\n          }\n          data = {total_items:list.length, rows:arrayList}\n      }\n      return data;\n  }\n\n  getReportData(){\n      let fromDate = this.fromDate.year+'-'+this.fromDate.month+'-'+this.fromDate.day,\n      toDate = this.toDate.year+'-'+this.toDate.month+'-'+this.toDate.day;\n      let filters = [\n          {field:'rentlot.startTime', value:fromDate, type:'gte', format:'date'},\n          {field:'rentlot.startTime', value:toDate, type:'lte', format:'date'},\n      ];\n\n      this.rentLotService.getBillingReportingData(\n          {where:{filters:filters}}\n        )\n      .subscribe(value => {\n          this.vehicles = this.buildTable(value.items);\n          this.vehicles.total_vehicles_amount = value.total_vehicles_amount;\n          this.vehicles.total_vehicles = value.total_vehicles;\n          this.vehicles.total_vehicles_distinct = value.total_vehicles_distinct;\n          this.vehiclesRow = this.vehicles.rows[0];\n          this.vehiclesPage = 1;\n      });\n  }\n\n  download(){\n      let fromDate = this.fromDate.year+'-'+this.fromDate.month+'-'+this.fromDate.day,\n      toDate = this.toDate.year+'-'+this.toDate.month+'-'+this.toDate.day;\n      let filters = [\n          {field:'rentlot.startTime', value:fromDate, type:'gte', format:'date'},\n          {field:'rentlot.startTime', value:toDate, type:'lte', format:'date'},\n      ];\n\n      this.rentLotService.getBillingReportingData(\n          {where:{filters:filters},format:'pdf'}\n        )\n      .subscribe(value => {\n          this.reportUrl = environment.filesUrlBase + '/' + value;\n      });\n  }\n\n  ngOnInit() {\n      this.getReportData();\n  }\n\n  setVehiclesPage(page){\n    this.vehiclesRow = this.vehicles.rows[page-1];\n  }\n\n  applyFilters(){\n      this.getReportData();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/reports/billing/billing.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { RentLotService } from '../../../service/rentlot.service';\n\nimport {NgbDateStruct, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-lots-report',\n  templateUrl: './lots-report.component.html',\n  styleUrls: ['./lots-report.component.css']\n})\nexport class LotsReportComponent implements OnInit {\n\n  public lotsRow : any = null;\n  public lotsPage : number = 1;\n  public lots : any = {total_items:0, rows:[]};\n  public unusedLots : any = {total_items:0, rows:[]};\n  public unusedLotsRow : any = null;\n  public unusedLotsPage : number = 1;\n\n  public fromDate;\n  public toDate;\n  public reservedLots;\n  public showAll;\n\n  constructor(private rentLotService: RentLotService, calendar: NgbCalendar) {\n      this.fromDate = calendar.getNext(calendar.getToday(), 'd', -30);\n      this.toDate = calendar.getToday();\n      this.reservedLots = false;\n      this.showAll = true;\n  }\n\n  buildTable(list){\n      let data = {total_items:0, rows:[]}\n      if(list){\n          let limit = list.length/5,\n          arrayList = [],\n          begin = 0,\n          end = 5;\n          for (var i = 0; i < limit; i++) {\n              arrayList.push(list.slice(begin,end));\n              begin = end;\n              end+= 5;\n          }\n          data = {total_items:list.length, rows:arrayList}\n      }\n      return data;\n  }\n\n  getReportData(){\n      let fromDate = this.fromDate.year+'-'+this.fromDate.month+'-'+this.fromDate.day,\n      toDate = this.toDate.year+'-'+this.toDate.month+'-'+this.toDate.day;\n      let filters = [\n          {field:'rentlot.startTime', value:fromDate, type:'gte', format:'date'},\n          {field:'rentlot.startTime', value:toDate, type:'lte', format:'date'},\n      ];\n\n      if(!this.showAll){\n          filters.push({field:'lot.reserved', value:this.reservedLots, type:'eq', format:null});\n      }\n\n      this.rentLotService.getLotsReportingData(\n          {where:{filters:filters}}\n        )\n      .subscribe(value => {\n          this.lots = this.buildTable(value.items);\n          this.lotsRow = this.lots.rows[0];\n          this.unusedLots = this.buildTable(value.unused_lots);\n          this.unusedLotsRow = this.unusedLots.rows[0];\n          this.lotsPage = 1;\n          this.unusedLotsPage = 1;\n      });\n  }\n\n  ngOnInit() {\n      this.getReportData();\n  }\n\n  setLotsPage(page){\n    this.lotsRow = this.lots.rows[page-1];\n  }\n\n  setUnusedLotsPage(page){\n    this.unusedLotsRow = this.unusedLots.rows[page-1];\n  }\n\n\n  applyFilters(){\n      this.getReportData();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/reports/lots-report/lots-report.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/reports/reports.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { UserAuditService } from '../../service/user-audit.service';\nimport { UserAudit } from '../../models/user-audit';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-users-audit',\n  templateUrl: './users-audit.component.html',\n  styleUrls: ['./users-audit.component.css']\n})\nexport class UsersAuditComponent implements OnInit {\n\n  public userAudits;\n  public pagination;\n  public page : number = 1;\n  public audit : any = null;\n\n  constructor(private userAuditService: UserAuditService, private router: Router, \n    private route: ActivatedRoute) {\n\n    }\n\n  ngOnInit() {\n      this.userAudits = this.userAuditService.userAudits;\n      this.userAuditService.getList({\n          offset:0,\n          limit:8,\n          orderby:{field: \"createdAt\", type:\"desc\"},\n          where:null\n      });\n      this.userAuditService.pagination.subscribe(value => this.pagination = value);\n  }\n\n  showDetail(audit){\n    audit.meta = JSON.parse(audit.meta);\n    this.audit = audit;\n  }\n\n  back(){\n    this.audit = null;\n  }\n\n  add(){\n    this.router.navigate(['add'], { relativeTo: this.route });\n  }\n\n  setPage(page){\n    this.userAuditService.getList({\n        offset:page-1,\n        limit:this.pagination.limit,\n        orderby:{field: \"createdAt\", type:\"desc\"},\n        where:null\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/users-audit/users-audit.component.ts","import {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport {MdSnackBar} from '@angular/material';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { UserGroup } from '../../models/user-group';\nimport { User } from '../../models/user';\n\nimport { UserGroupService } from '../../service/user-group.service';\nimport { UserService } from '../../service/user.service';\n\n\n\n@Component({\n  selector: 'app-user-add',\n  template: `\n    <div class=\"card\">\n    <h4 class=\"card-header\">Add User</h4>\n    <div class=\"card-body\">\n      <div>\n      <span class=\"app-toolbar-filler\"></span>\n      <button md-button></button>\n      </div>\n        <form [formGroup]=\"formView\" >\n          <!-- form inputs -->\n          <div class=\"row\">\n           <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" id=\"firstName\" class=\"form-control\"\n                       formControlName=\"firstName\" required >\n                 <div *ngIf=\"formErrors.firstName\" class=\"alert alert-danger\">\n                  {{ formErrors.firstName }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" id=\"lastName\" class=\"form-control\"\n                       formControlName=\"lastName\" required >\n                 <div *ngIf=\"formErrors.lastName\" class=\"alert alert-danger\">\n                  {{ formErrors.lastName }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" id=\"email\" class=\"form-control\"\n                       formControlName=\"email\" required >\n                 <div *ngIf=\"formErrors.email\" class=\"alert alert-danger\">\n                  {{ formErrors.email }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"phoneNumber\">Phone</label>\n                <input type=\"text\" id=\"phoneNumber\" class=\"form-control\"\n                       formControlName=\"phoneNumber\" required >\n                 <div *ngIf=\"formErrors.phoneNumber\" class=\"alert alert-danger\">\n                  {{ formErrors.phoneNumber }}\n                  </div>\n              </div>\n           </div>\n\n           <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" id=\"username\" class=\"form-control\"\n                       formControlName=\"username\" required >\n                 <div *ngIf=\"formErrors.username\" class=\"alert alert-danger\">\n                  {{ formErrors.username }}\n                  </div>\n              </div>\n              \n              <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" class=\"form-control\"\n                       formControlName=\"password\" required >\n                 <div *ngIf=\"formErrors.password\" class=\"alert alert-danger\">\n                  {{ formErrors.password }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"userGroups\">Role</label>\n                  <select class=\"form-control\" formControlName=\"userGroups\" required>\n                    <option *ngFor=\"let group of groups|async\" [value]=\"group.id\">{{ group.name }}</option>\n                  </select>\n                  <div *ngIf=\"formErrors.userGroups\" class=\"alert alert-danger\">\n                  {{ formErrors.userGroups }}\n                  </div>\n              </div>\n            </div>\n            <!-- end form inputs -->\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <div class=\"form-group\">\n               <button class=\"pull-right\" md-raised-button  color=\"accent\" [disabled]=\"!formView.valid\" (click)=\"save()\">Save</button>\n               <button class=\"pull-left\" md-raised-button color=\"primary\" (click)=\"back()\">Cancel</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      \n   </div>\n</div>\n  `,\n  styles: []\n})\nexport class UserAddComponent implements OnInit {\n  \n  public groups;\n  public user: User;\n  public formView: FormGroup;\n\n  constructor(private userService: UserService, private groupService: UserGroupService,\n    private fb: FormBuilder,\n    public snackBar: MdSnackBar,\n    private router: Router, private route: ActivatedRoute, \n    private location: Location) {\n    this.groups = this.groupService.groups;\n    this.user = new User();\n  }\n\n  ngOnInit() {\n    this.groupService.getList();\n    this.buildForm();\n  }\n\n  save(){\n    this.user = this.formView.value;\n    this.userService.create(this.user)\n            .subscribe(data => {\n              let snackBarRef = this.snackBar.open(\n                data.message,\"OK\",{\n                duration: 2000,\n              });\n              if(data.response==='ok'){\n                this.formView.reset();\n                snackBarRef.afterDismissed().subscribe(() => {\n                  this.location.back();\n                });\n              }\n            },\n              error => console.log('Could not create the user.'),\n              () => console.log(\"done\")\n            );\n  }\n\n\n\n \n  back(){\n    this.location.back();\n  }\n  \n  buildForm(): void {\n    this.formView = this.fb.group({\n      'firstName': [this.user.firstName, [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]\n      ],\n      'lastName':[this.user.lastName, [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]],\n      'email':[this.user.email,[Validators.required]],\n      'phoneNumber':[this.user.phoneNumber,[Validators.required]],\n      'username':[this.user.username,[Validators.required]],\n      'password':[this.user.password,[Validators.required]],\n      'userGroups':[this.user.userGroups,[Validators.required]]\n    });\n\n    this.formView.valueChanges\n      .subscribe(data => this.onValueChanged(data));\n\n    this.onValueChanged(); // (re)set validation messages now\n  }\n\n\n  onValueChanged(data?: any) {\n    if (!this.formView) { return; }\n    const form = this.formView;\n\n    for (const field in this.formErrors) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && control.dirty && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key in control.errors) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  formErrors = {\n    'firstName': '',\n    'lastName': '',\n    'email': '',\n    'phoneNumber': '',\n    'username': '',\n    'password': '',\n    'userGroups': ''\n  };\n\n  validationMessages = {\n    'firstName': {\n      'required':  'required field',\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength': 'cannot be more than 24 characters long.'\n    },\n    'lastName':{\n      'required': 'required field',\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength':     'cannot be more than 24 characters long.'\n    },\n    'email':{'required':'required field'},\n    'phoneNumber':{'required':'required field'},\n    'username':{'required':'required field'},\n    'password':{'required':'required field'},\n    'userGroups':{'required':'required field'}\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/users/user-add.component.ts","import {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport {MdSnackBar} from '@angular/material';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { UserGroup } from '../../models/user-group';\nimport { User } from '../../models/user';\n\nimport { UserGroupService } from '../../service/user-group.service';\nimport { UserService } from '../../service/user.service';\n\n\n\n@Component({\n  selector: 'app-user-add',\n  template: `\n   <div class=\"card\">\n    <h4 class=\"card-header\">Edit User</h4>\n    <div class=\"card-body\">\n      <div>\n      <span class=\"app-toolbar-filler\"></span>\n      <button md-button></button>\n      </div>\n        <md-spinner *ngIf=\"!showForm\" class=\"app-spinner\"></md-spinner>\n        <div *ngIf=\"showForm\" class=\"col-md-12\">\n             <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <img src=\"../../assets/images/user.jpg\" class=\"img-fluid\" alt=\"...\">\n                </div>\n                <div class=\"col-md-4\">\n                  <label>Please Select an image</label>\n                  <input type=\"file\" id=\"file\" (change)=\"setPhoto($event)\" class=\"form-control-file\">\n                  <button md-raised-button (click)=\"savePhoto($event)\" color=\"primary\" >Save</button>\n                </div>\n              </div>\n           </div>\n        <form *ngIf=\"showForm\" [formGroup]=\"formView\">\n          <!-- form inputs -->\n          <div class=\"row\">\n           <div class=\"col-md-2\">\n              <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" id=\"firstName\" class=\"form-control\"\n                       formControlName=\"firstName\" required >\n                 <div *ngIf=\"formErrors.firstName\" class=\"alert alert-danger\">\n                  {{ formErrors.firstName }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" id=\"lastName\" class=\"form-control\"\n                       formControlName=\"lastName\" required >\n                 <div *ngIf=\"formErrors.lastName\" class=\"alert alert-danger\">\n                  {{ formErrors.lastName }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" id=\"email\" class=\"form-control\"\n                       formControlName=\"email\" required >\n                 <div *ngIf=\"formErrors.email\" class=\"alert alert-danger\">\n                  {{ formErrors.email }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"phoneNumber\">Phone</label>\n                <input type=\"text\" id=\"phoneNumber\" class=\"form-control\"\n                       formControlName=\"phoneNumber\" required >\n                 <div *ngIf=\"formErrors.phoneNumber\" class=\"alert alert-danger\">\n                  {{ formErrors.phoneNumber }}\n                  </div>\n              </div>\n           </div>\n\n           <div class=\"col-md-2\">\n              <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" id=\"username\" class=\"form-control\"\n                       formControlName=\"username\" required >\n                 <div *ngIf=\"formErrors.username\" class=\"alert alert-danger\">\n                  {{ formErrors.username }}\n                  </div>\n              </div>\n              \n              <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" class=\"form-control\"\n                       formControlName=\"password\" required >\n                 <div *ngIf=\"formErrors.password\" class=\"alert alert-danger\">\n                  {{ formErrors.password }}\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"userGroups\">Role</label>\n                  <select class=\"form-control\" formControlName=\"userGroups\" required>\n                    <option *ngFor=\"let group of groups|async\" [value]=\"group.id\">{{ group.name }}</option>\n                  </select>\n                  <div *ngIf=\"formErrors.userGroups\" class=\"alert alert-danger\">\n                  {{ formErrors.userGroups }}\n                  </div>\n              </div>\n              <div class=\"form-check\">\n                <md-checkbox formControlName=\"active\">Is Active ?</md-checkbox>\n                <md-checkbox formControlName=\"lockUser\">Suspend</md-checkbox>\n              </div>\n            </div>\n            <!-- end form inputs -->\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <div class=\"form-group\">\n               <button class=\"pull-right\" md-raised-button color=\"accent\" [disabled]=\"!formView.valid\" (click)=\"save()\">Save</button>\n               <button class=\"pull-left\" md-raised-button color=\"primary\" (click)=\"back()\">Cancel</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      \n   </div>\n</div>\n  `,\n  styles: []\n})\nexport class UserEditComponent implements OnInit {\n  public id;\n  public groups;\n  public user: User;\n  public formView: FormGroup;\n  public showForm;\n  public file: any;\n\n  constructor(private userService: UserService, private groupService: UserGroupService,\n    private fb: FormBuilder,\n    public snackBar: MdSnackBar,\n    private router: Router, private route: ActivatedRoute, \n    private location: Location) {\n    this.showForm = false;\n    this.groups = this.groupService.groups;\n    this.user = new User();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n       this.id = +params['id'];\n       this.groupService.getList();\n       this.buildForm();\n       this.userService.get(this.id).subscribe(data => {\n              this.formView.setValue({\n                'firstName': data.firstName,\n                'lastName':data.lastName,\n                'email':data.email,\n                'phoneNumber':data.phoneNumber,\n                'username':data.username,\n                'password':data.password,\n                'active':data.active,\n                'lockUser':data.lockUser,\n                'userGroups':data.userGroups[0].id\n              });\n              this.showForm = true;\n            },\n              error => {\n                console.log('Could not load Users.');\n                this.location.back();\n              }\n            );\n       \n       \n    });\n    \n  }\n\n\n  save(){\n    this.user = this.formView.value;\n    this.userService.update(this.id, this.user)\n            .subscribe(data => {\n              let snackBarRef = this.snackBar.open(\n                data.message,\"OK\",{\n                duration: 2000,\n              });\n              if(data.response==='ok'){\n                this.formView.reset();\n                snackBarRef.afterDismissed().subscribe(() => {\n                  this.location.back();\n                });\n              }\n            },\n              error => console.log('Could not create the user.'),\n              () => console.log(\"done\")\n            );\n  }\n  \n\n  setPhoto($e){\n    this.file = $e.target.files[0];\n  }\n\n  savePhoto(){\n    this.userService.upload(this.id,this.file);\n  }\n\n  back(){\n    this.location.back();\n  }\n  \n  buildForm(): void {\n    console.log(this.user);\n    this.formView = this.fb.group({\n      'firstName': [this.user.firstName, [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]\n      ],\n      'lastName':[this.user.lastName, [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30)\n        ]],\n      'email':[this.user.email,[Validators.required]],\n      'phoneNumber':[this.user.phoneNumber,[Validators.required]],\n      'username':[this.user.username,[Validators.required]],\n      'password':[this.user.password,[Validators.required]],\n      'active': '',\n      'lockUser': '',\n      'userGroups':[this.user.userGroups,[Validators.required]]\n    });\n\n    this.formView.valueChanges\n      .subscribe(data => this.onValueChanged(data));\n\n    this.onValueChanged(); // (re)set validation messages now\n  }\n\n\n  onValueChanged(data?: any) {\n    console.log(data);\n    console.log(this.formView);\n    if (!this.formView) { return; }\n    const form = this.formView;\n\n    for (const field in this.formErrors) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && control.dirty && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key in control.errors) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  formErrors = {\n    'firstName': '',\n    'lastName': '',\n    'email': '',\n    'phoneNumber': '',\n    'username': '',\n    'password': '',\n    'userGroups': ''\n  };\n\n  validationMessages = {\n    'firstName': {\n      'required':  'required field',\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength': 'cannot be more than 24 characters long.'\n    },\n    'lastName':{\n      'required': 'required field',\n      'minlength': 'must be at least 4 characters long.',\n      'maxlength':     'cannot be more than 24 characters long.'\n    },\n    'email':{'required':'required field'},\n    'phoneNumber':{'required':'required field'},\n    'username':{'required':'required field'},\n    'password':{'required':'required field'},\n    'userGroups':{'required':'required field'}\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/users/user-edit.component.ts","import { Injectable } from '@angular/core';\nimport {Http, XHRBackend, RequestOptions, Request, RequestOptionsArgs, Response, Headers} from '@angular/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { AuthenticationService } from './authentication.service';\n\n\n@Injectable()\nexport class CommonService {\n\n  private options;\n  \n  constructor(private http: Http,\n    private auth: AuthenticationService,\n    private router: Router) {\n    let headers = new Headers();\n    headers.append('Authorization', this.auth.token);\n    headers.append('Content-Type', 'application/json');\n    this.options = new RequestOptions({'headers': headers});\n  }\n\n  private updateOptions( params: any ) {\n    let options = this.options;\n    if(params){\n      options.params = params;\n    }\n    return options;\n  }\n\n  public get( url: string, params?: any) {\n    let options = this.updateOptions(params);\n    return this.http.get(url, this.options)\n                    .map(this.manageData)\n                    .catch(this.handleError);\n  }\n\n  public post( url: string, params?: any) {\n    let options = this.updateOptions(params);\n    return this.http.post(url, params, this.options)\n                    .map(this.manageData)\n                    .catch(this.handleError);\n  }\n\n  public put( url: string, params?: any){\n    let options = this.updateOptions(params);\n    return this.http.put(url, params, this.options)\n                    .map(this.manageData)\n                    .catch(this.handleError);\n  }\n\n  public patch( url: string, params?: any){\n    /* not implemented yet */\n  }\n\n  public delete( url: string, params?: any){\n    /* not implemented yet */\n  }\n\n  public uploadFile(url, fileToUpload){\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Authorization': this.auth.token,\n          'Accept': 'application/json, application/xml, text/plain, text/html, *.*',\n          'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\n        },\n        body: fileToUpload\n      }).then(\n        response => response.json()\n      ).then(\n        success => console.log(success)\n      ).catch(\n        error => console.log(error)\n      );  \n  }\n\n  private manageData(response: Response) {\n    return response.json() || { };\n  }\n\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/common.service.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { UserService } from '../../service/user.service';\nimport { User } from '../../models/user';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  public users;\n\n  constructor(private userService: UserService, private router: Router, \n    private route: ActivatedRoute) {}\n  \n  ngOnInit() {\n      this.users = this.userService.users;\n      this.userService.getList();\n  }\n\n  edit(id){\n    this.router.navigate(['edit/', id], { relativeTo: this.route });\n  }\n\n  add(){\n    this.router.navigate(['add'], { relativeTo: this.route });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/users/users.component.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router) { }\n\n    canActivate() {\n        if (localStorage.getItem('tk')) {\n            // logged in so return true\n            console.log(\"guard\");\n            return true;\n        }\n\n        // not logged in so redirect to login page\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth.guard.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport { FormControl }       from '@angular/forms';\nimport { Router }       from '@angular/router';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  name = new FormControl();\n  user: any = {username:'admin',password:'password1'};\n  submitted = false;\n  showError = false;\n  constructor(public authenticationService: AuthenticationService, private router: Router) { }\n  ngOnInit() { \n    // reset login status\n    this.authenticationService.logout();\n  }\n\n  \n  onSubmit() {\n     this.submitted = true;\n     this.authenticationService.login(this.user.username, this.user.password)\n            .subscribe(result => {\n                if (result === true) {\n                    this.router.navigate(['/admin']);\n                } else {\n                    this.showError = true;\n                }\n            },\n             error => {\n                this.showError = true;\n              }\n            );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","export class Customer {\n    id: number;\n    firstName: string = \"\";\n    lastName: string = \"\";\n    phoneNumber: string = \"\";\n    vehicles: null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/customer.ts","export class Vehicle {\n    id: number;\n    brand: null;\n    color: string = \"\";\n    plate: string = \"\";\n    vehicleType: null;\n    customer: null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/vehicle.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { RentType } from '../models/rent-type';\n\n@Injectable()\nexport class RentTypeService {\n\n    rentsTypes: Observable<RentType[]>\n    private _rentsTypes: BehaviorSubject<RentType[]>;\n    private baseUrl: string;\n    private dataStore: {\n        rentsTypes: RentType[]\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.rentType;\n        this.dataStore = { rentsTypes: [] };\n        this._rentsTypes = <BehaviorSubject<RentType[]>>new BehaviorSubject([]);\n        this.rentsTypes = this._rentsTypes.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.rentsTypes = data.items;\n              this._rentsTypes.next(Object.assign({}, this.dataStore).rentsTypes);\n            },\n              error => console.log('Could not load RentTypes.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    delete(id){}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/rent-type.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { UserAudit } from '../models/user-audit';\nimport { Pagination } from '../models/pagination';\n\n\n@Injectable()\nexport class UserAuditService {\n\n    userAudits: Observable<UserAudit[]>;\n    pagination: Observable<Pagination>;\n    private _userAudits: BehaviorSubject<UserAudit[]>;\n    private _pagination: BehaviorSubject<Pagination>;\n    private baseUrl: string;\n    private dataStore: {\n        userAudits: UserAudit[],\n        pagination: Pagination\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.userAudit;\n        this.dataStore = { userAudits: [] , pagination: new Pagination()};\n        this._userAudits = <BehaviorSubject<UserAudit[]>>new BehaviorSubject([]);\n        this._pagination = <BehaviorSubject<Pagination>>new BehaviorSubject(new Pagination());\n        this.userAudits = this._userAudits.asObservable();\n        this.pagination = this._pagination.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.userAudits = data.items;\n              this.dataStore.pagination = data.pagination;\n              this._userAudits.next(Object.assign({}, this.dataStore).userAudits);\n              this._pagination.next(Object.assign({}, this.dataStore).pagination);\n            },\n              error => console.log('Could not load UserAudits.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    search(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        return this.commonService.get(url, params);\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    delete(id){}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/user-audit.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 385;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 385\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from '../guards/auth.guard';\n\nimport { AdminComponent }  from './admin.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { UsersComponent }  from './users/users.component';\nimport { UserAddComponent } from './users/user-add.component';\nimport { UserEditComponent } from './users/user-edit.component';\nimport { UsersAuditComponent } from './users-audit/users-audit.component';\n\nimport { LotsComponent } from './lots/lots.component';\nimport { ParkingComponent } from './parking/parking.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerAddComponent } from './customer/customer-add.component';\nimport { CustomerEditComponent } from './customer/customer-edit.component';\n\nimport { ReportsComponent } from './reports/reports.component';\nimport { BillingComponent } from './reports/billing/billing.component';\nimport { AverageComponent } from './reports/average/average.component';\nimport { LotsReportComponent } from './reports/lots-report/lots-report.component';\n\n\n\nconst adminRoutes: Routes = [\n  {\n    path: 'admin',\n    component: AdminComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: '',\n        children: [\n          { path: '', component: ReportsComponent },\n\n          { path: 'users', component: UsersComponent },\n          { path: 'users/edit/:id', component: UserEditComponent },\n          { path: 'users/add', component: UserAddComponent },\n          { path: 'audit', component: UsersAuditComponent },\n\n          { path: 'customers', component: CustomerComponent },\n          { path: 'customers/edit/:id', component: CustomerEditComponent },\n          { path: 'customers/add', component: CustomerAddComponent },\n\n          {path: 'lots', component: LotsComponent},\n          {path: 'parking', component: ParkingComponent},\n          {path: 'profile', component: ProfileComponent},\n\n          {path: 'reports', component: ReportsComponent},\n          {path: 'reports/lots', component: LotsReportComponent},\n          {path: 'reports/billing', component: BillingComponent},\n          {path: 'reports/average', component: AverageComponent}\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(adminRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AdminRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/admin-routing.module.ts","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '@angular/material';\nimport { Ng2CompleterModule } from \"ng2-completer\";\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PrettyJsonModule } from 'angular2-prettyjson';\n\n// services\nimport { UserService } from '../service/user.service';\nimport { UserGroupService } from '../service/user-group.service';\nimport { UserAuditService } from '../service/user-audit.service';\nimport { CustomerService } from '../service/customer.service';\nimport { VehicleService } from '../service/vehicle.service';\nimport { VehicleTypeService } from '../service/vehicle-type.service';\nimport { BrandService } from '../service/brand.service';\nimport { SectionService } from '../service/section.service';\nimport { LotService } from '../service/lot.service';\nimport { RentLotService } from '../service/rentlot.service';\nimport { RentTypeService } from '../service/rent-type.service';\nimport { RentStatusService } from '../service/rent-status.service';\n\nimport { AdminComponent }           from './admin.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { AdminRoutingModule }       from './admin-routing.module';\nimport { DatatableComponent } from './datatable/datatable.component';\nimport { UsersComponent } from './users/users.component';\nimport { UserAddComponent } from './users/user-add.component';\nimport { UserEditComponent } from './users/user-edit.component';\nimport { UserGroupComponent } from './user-group/user-group.component';\nimport { UserGroupEditComponent } from './user-group/user-group-edit.component';\nimport { UserGroupAddComponent } from './user-group/user-group-add.component';\nimport { ParkingComponent } from './parking/parking.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerAddComponent } from './customer/customer-add.component';\nimport { CustomerEditComponent } from './customer/customer-edit.component';\nimport { UsersAuditComponent } from './users-audit/users-audit.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { LotsComponent } from './lots/lots.component';\nimport { BillingComponent } from './reports/billing/billing.component';\nimport { AverageComponent } from './reports/average/average.component';\nimport { LotsReportComponent } from './reports/lots-report/lots-report.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    Ng2CompleterModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    NgxDatatableModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    AdminRoutingModule,\n    NgbModule,\n    PrettyJsonModule,\n  ],\n  declarations: [\n    AdminComponent,\n    DashboardComponent,\n    UsersComponent,\n    UserAddComponent,\n    UserEditComponent,\n    UserGroupComponent,\n    UserGroupEditComponent,\n    UserGroupAddComponent,\n    ParkingComponent,\n    CustomerComponent,\n    CustomerAddComponent,\n    CustomerEditComponent,\n    DatatableComponent,\n    UsersAuditComponent,\n    ProfileComponent,\n    ReportsComponent,\n    LotsComponent,\n    BillingComponent,\n    AverageComponent,\n    LotsReportComponent\n  ],\n  providers:[\n    DatatableComponent,\n    UserService,\n    UserGroupService,\n    UserAuditService,\n    CustomerService,\n    VehicleService,\n    VehicleTypeService,\n    BrandService,\n    SectionService,\n    LotService,\n    RentLotService,\n    RentTypeService,\n    RentStatusService\n  ]\n})\nexport class AdminModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/admin.module.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/dashboard/dashboard.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-datatable',\n  templateUrl: './datatable.component.html',\n  styleUrls: ['./datatable.component.css']\n})\nexport class DatatableComponent implements OnInit {\n  private service;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/datatable/datatable.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-group-add',\n  template: `\n    <md-card>\n    <h2>Users Group</h2>\n    </md-card>\n  `,\n  styles: []\n})\nexport class UserGroupAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/user-group/user-group-add.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-group-edit',\n  template: `\n    <md-card>\n    <h2>Users Group</h2>\n    </md-card>\n  `,\n  styles: []\n})\nexport class UserGroupEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/user-group/user-group-edit.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { UserGroupService } from '../../service/user-group.service';\nimport { UserGroup } from '../../models/user-group';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-user-group',\n  template: `\n    <md-card>\n    <h2>Users Group</h2>\n    <ngx-datatable\n        class=\"material\"\n        [rows]=\"groups | async\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"'auto'\">\n        <ngx-datatable-column name=\"Id\" [width]=\"100\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\" [width]=\"100\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Action\">\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\n            <button md-raised-button color=\"accent\" (click)=\"edit(row['id'])\"><i class=\"material-icons\">mode_edit</i></button>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n      <span class=\"app-action\">\n          <button md-fab (click)=\"add()\"><md-icon>add circle</md-icon></button>\n      </span>\n    </md-card>\n  `,\n  styles: []\n})\nexport class UserGroupComponent implements OnInit {\n  \n  public groups;\n\n  constructor(private groupService: UserGroupService, private router: Router, \n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n      this.groups = this.groupService.groups;\n      this.groupService.getList();\n  }\n\n  edit(id){\n    this.router.navigate(['edit/', id], { relativeTo: this.route });\n  }\n\n  add(){\n    this.router.navigate(['add'], { relativeTo: this.route });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/user-group/user-group.component.ts","import {Component, Optional} from '@angular/core';\nimport {MdDialog, MdDialogRef, MdSnackBar} from '@angular/material';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\nisDarkTheme: boolean = false;\n  lastDialogResult: string;\n\n  foods: any[] = [\n    {name: 'Pizza', rating: 'Excellent'},\n    {name: 'Burritos', rating: 'Great'},\n    {name: 'French fries', rating: 'Pretty good'},\n  ];\n\n  progress: number = 0;\n\n  constructor(private _dialog: MdDialog, private _snackbar: MdSnackBar) {\n    // Update the value for the progress-bar on an interval.\n    setInterval(() => {\n      this.progress = (this.progress + Math.floor(Math.random() * 4) + 1) % 100;\n    }, 200);\n  }\n\n  showSnackbar() {\n    this._snackbar.open('YUM SNACKS', 'CHEW');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, RequestOptions } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '@angular/material';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PrettyJsonModule } from 'angular2-prettyjson';\n\n\n//todo : CREATE not found component\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { AuthGuard }        from './guards/auth.guard';\n\nimport { AuthenticationService } from './service/authentication.service';\nimport { CommonService } from './service/common.service';\n\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { AdminModule } from './admin/admin.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    NgxDatatableModule,\n    FormsModule,\n    HttpModule,\n    AdminModule,\n    AppRoutingModule,\n    NgbModule.forRoot(),\n    PrettyJsonModule,\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n  ],\n  providers: [\n    AuthGuard,\n    AuthenticationService,\n    CommonService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { NgModule }              from '@angular/core';\nimport { RouterModule, Routes }  from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { AuthGuard } from './guards/auth.guard';\n\nconst appRoutes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: '',   redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","export class Lot {\n    id: number;\n    reference: string = \"\";\n    description: string = \"\";\n    section: null;\n    available: boolean = true;\n    reserved: boolean = false;\n    rentlots: null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/lot.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { RentStatus } from '../models/rent-status';\n\n@Injectable()\nexport class RentStatusService {\n\nrentStatus: Observable<RentStatus[]>\n    private _rentStatus: BehaviorSubject<RentStatus[]>;\n    private baseUrl: string;\n    private dataStore: {\n        rentStatus: RentStatus[]\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.rentStatus;\n        this.dataStore = { rentStatus: [] };\n        this._rentStatus = <BehaviorSubject<RentStatus[]>>new BehaviorSubject([]);\n        this.rentStatus = this._rentStatus.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.rentStatus = data.items;\n              this._rentStatus.next(Object.assign({}, this.dataStore).rentStatus);\n            },\n              error => console.log('Could not load RentStatus.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    delete(id){}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/rent-status.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SectionService {\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/section.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class AuthenticationService {\n    public token: string;\n    public user: any;\n\n    constructor(private http: Http) {\n        // set token if saved in local storage\n        var currentUser = JSON.parse(localStorage.getItem('tk'));\n        this.token = currentUser && currentUser.token;\n        this.user = currentUser && currentUser.user;\n    }\n\n    login(username: string, password: string): Observable<boolean> {\n        var uri = environment.apiUrlBase + environment.apiPaths.auth;\n        return this.http.post(uri, JSON.stringify({ username: username, password: password }))\n            .map((response: Response) => {\n                // login successful if there's a jwt token in the response\n                let token = response.json() && response.json().token;\n                let user = response.json() && response.json().user;\n                if (token) {\n                    // set token property\n                    this.token = token;\n                    this.user = user;\n\n                    // store username and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('tk', JSON.stringify({token: token, user:user }));\n\n                    // return true to indicate successful login\n                    return true;\n                } else {\n                    // return false to indicate failed login\n                    return false;\n                }\n            });\n    }\n\n    logout(): void {\n        // clear token remove user from local storage to log user out\n        this.token = null;\n        localStorage.removeItem('tk');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/authentication.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".user-sidebar{\\n    padding: 0px;\\n    margin: 0px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/admin.component.css\n// module id = 471\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/dashboard/dashboard.component.css\n// module id = 472\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/datatable/datatable.component.css\n// module id = 473\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".custom-day {\\n      text-align: center;\\n      padding: 0.185rem 0.25rem;\\n      display: inline-block;\\n      height: 2rem;\\n      width: 2rem;\\n    }\\n    .custom-day.focused {\\n      background-color: #e6e6e6;\\n    }\\n    .custom-day.range, .custom-day:hover {\\n      background-color: rgb(2, 117, 216);\\n      color: white;\\n    }\\n    .custom-day.faded {\\n      background-color: rgba(2, 117, 216, 0.5);\\n    }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/lots/lots.component.css\n// module id = 474\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/profile/profile.component.css\n// module id = 475\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/reports/average/average.component.css\n// module id = 476\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/reports/billing/billing.component.css\n// module id = 477\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/reports/lots-report/lots-report.component.css\n// module id = 478\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/reports/reports.component.css\n// module id = 479\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { Rentlot } from '../models/rentlot';\nimport { Pagination } from '../models/pagination';\n\n@Injectable()\nexport class RentLotService {\n    pagination: Observable<Pagination>;\n    rentlots: Observable<Rentlot[]>;\n    private _rentlots: BehaviorSubject<Rentlot[]>;\n    private _pagination: BehaviorSubject<Pagination>;\n    private baseUrl: string;\n    private dataStore: {\n        rentlots: Rentlot[],\n        pagination: Pagination\n    };\n\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.rentLot;\n        this.dataStore = { rentlots: [], pagination: new Pagination()};\n        this._rentlots = <BehaviorSubject<Rentlot[]>>new BehaviorSubject([]);\n        this._pagination = <BehaviorSubject<Pagination>>new BehaviorSubject(new Pagination());\n        this.pagination = this._pagination.asObservable();\n        this.rentlots = this._rentlots.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.rentlots = data.items;\n              this.dataStore.pagination = data.pagination;\n              this._rentlots.next(Object.assign({}, this.dataStore).rentlots);\n              this._pagination.next(Object.assign({}, this.dataStore).pagination);\n            },\n              error => console.log('Could not load Rentlots.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    getLotsReportingData(data=null){\n        let url = this.baseUrl+'/reporting/lots';\n        return this.commonService.get(url,data);\n    }\n\n    getBillingReportingData(data=null){\n        let url = this.baseUrl+'/reporting/billing';\n        return this.commonService.get(url,data);\n    }\n\n    getAverageReportingData(data=null){\n        let url = this.baseUrl+'/reporting/average';\n        return this.commonService.get(url,data);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    delete(id){}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/rentlot.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/users-audit/users-audit.component.css\n// module id = 480\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/users/users.component.css\n// module id = 481\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 482\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 483\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"  .center {\\n    margin: auto;\\n    width: 50%;\\n    padding: 10px;\\n    text-align: center;\\n  }\\n\\n  form {\\n      font-size: 18px;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = 484\n// module chunks = 1","module.exports = \"\\n<md-sidenav-container fullscreen>\\n\\n  <md-sidenav #sidenav class=\\\"app-sidenav\\\" mode=\\\"side\\\" opened=\\\"true\\\">\\n    <md-card class=\\\"user-sidebar\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <img src=\\\"../../assets/images/user.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"...\\\">\\n       </div>\\n       <div class=\\\"col-md-4\\\">\\n        <p class=\\\"text-capitalize\\\">{{user.firstName}} {{user.lastName}}</p>\\n        <p class=\\\"text-uppercase\\\">{{user.role}}</p>\\n        <a class=\\\"text-lowercase\\\" routerLink=\\\"./profile\\\" >Profile</a>\\n       </div>\\n      </div>\\n    </md-card>\\n    <md-nav-list>\\n          <div *ngIf=\\\"user.role=='admin'\\\">\\n            <a class=\\\"text-uppercase\\\" md-list-item routerLink=\\\"./reports\\\" > <i class=\\\"material-icons\\\">insert_chart</i>Reports</a>\\n            <a class=\\\"text-uppercase\\\" md-list-item routerLink=\\\"./users\\\" > <i class=\\\"material-icons\\\">supervisor_account</i> Users</a>\\n            <a class=\\\"text-uppercase\\\" md-list-item routerLink=\\\"./audit\\\" > <i class=\\\"material-icons\\\">adb</i> Audit Users</a>\\n            <a class=\\\"text-uppercase\\\" md-list-item routerLink=\\\"./lots\\\" > <i class=\\\"material-icons\\\">view_list</i> Lots</a>\\n          </div>\\n          <a class=\\\"text-uppercase\\\" md-list-item routerLink=\\\"./customers\\\" > <i class=\\\"material-icons\\\">view_list</i> Customers</a>\\n          <a class=\\\"text-uppercase\\\" md-list-item routerLink=\\\"./parking\\\" > <i class=\\\"material-icons\\\">local_parking</i>Manage Parking</a>\\n          <a class=\\\"text-uppercase\\\" md-list-item (click)=\\\"logout()\\\"><i class=\\\"material-icons\\\">arrow_back</i>Logout</a>\\n          \\n    </md-nav-list>\\n  </md-sidenav>\\n\\n  <md-toolbar color=\\\"primary\\\">\\n    <button class=\\\"app-icon-button\\\" (click)=\\\"sidenav.toggle()\\\">\\n      <i class=\\\"material-icons app-toolbar-menu\\\">menu</i>\\n    </button>\\n\\n\\n    <span class=\\\"app-toolbar-filler\\\"></span>\\n    <h3>PARKING - ADMIN</h3>\\n  </md-toolbar>\\n\\n  <div class=\\\"admin-content\\\">\\n    <md-sidenav-container>\\n      <div class=\\\"my-content\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </md-sidenav-container>\\n  </div>\\n</md-sidenav-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/admin.component.html\n// module id = 488\n// module chunks = 1","module.exports = \"<md-card>\\n<h2>Dashboard</h2>\\n</md-card>\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/dashboard/dashboard.component.html\n// module id = 489\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { UserGroup } from '../models/user-group';\n\n@Injectable()\nexport class UserGroupService {\n\n  groups: Observable<UserGroup[]>\n    private _groups: BehaviorSubject<UserGroup[]>;\n    private baseUrl: string;\n    private dataStore: {\n        groups: UserGroup[]\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.userGroup;\n        this.dataStore = { groups: [] };\n        this._groups = <BehaviorSubject<UserGroup[]>>new BehaviorSubject([]);\n        this.groups = this._groups.asObservable();\n    }\n\n    getList(offset = 0, limit = 20){\n        let url = this.baseUrl+'/'+offset+'/'+limit;\n        this.commonService.get(url)\n            .subscribe(data => {\n              this.dataStore.groups = data;\n              this._groups.next(Object.assign({}, this.dataStore).groups);\n            },\n              error => console.log('Could not load groups.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/user-group.service.ts","module.exports = \"<p>\\n  datatable works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/datatable/datatable.component.html\n// module id = 490\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">Lots</h4>\\n  <div class=\\\"card-body\\\">\\n        <ngx-datatable\\n        *ngIf=\\\"!selectedLot\\\"\\n        class=\\\"material\\\"\\n        [rows]=\\\"lots | async\\\"\\n        [headerHeight]=\\\"50\\\"\\n        [footerHeight]=\\\"50\\\"\\n        [rowHeight]=\\\"'auto'\\\">\\n        <ngx-datatable-column name=\\\"id\\\" [width]=\\\"100\\\"></ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"reference\\\" [width]=\\\"100\\\"></ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"section\\\" [width]=\\\"100\\\">\\n          <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n            {{value.name}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"available\\\" [width]=\\\"100\\\">\\n          <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n            <div [ngClass]=\\\"{'bg-success': value, 'bg-danger': !value}\\\" class=\\\"\\\">&nbsp;</div>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"reserved\\\" [width]=\\\"100\\\">\\n          <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n            <i class=\\\"material-icons\\\" *ngIf=\\\"value\\\">accessible</i>\\n            <i class=\\\"material-icons\\\" *ngIf=\\\"!value\\\">accessibility</i>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Action\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            <button md-raised-button color=\\\"accent\\\" (click)=\\\"selectLot(row)\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n          </ng-template>\\n        </ngx-datatable-column>\\n      </ngx-datatable>\\n      <ngb-pagination *ngIf=\\\"pagination.total_items > 0 && !selectedLot\\\"\\n          class=\\\"\\\"\\n          [collectionSize]=\\\"pagination.total_items\\\" \\n          [(page)]=\\\"page\\\" \\n          [pageSize]=\\\"pagination.limit\\\"\\n          [rotate]=\\\"true\\\" \\n          [ellipses]=\\\"false\\\" \\n          [boundaryLinks]=\\\"true\\\"\\n          (pageChange)=\\\"setPage(page)\\\">\\n        </ngb-pagination>\\n\\n    <md-card *ngIf=\\\"selectedLot\\\">\\n      <form [formGroup]=\\\"formView\\\">\\n          <!-- form inputs -->\\n          <div class=\\\"row\\\">\\n           <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Section: {{selectedLot.section.name}}</label>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"reference\\\">Reference</label>\\n                <input type=\\\"text\\\" id=\\\"reference\\\" class=\\\"form-control\\\"\\n                       formControlName=\\\"reference\\\" required >\\n                 <div *ngIf=\\\"formErrors.reference\\\" class=\\\"alert alert-danger\\\">\\n                  {{ formErrors.reference }}\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"description\\\">Description</label>\\n                <input type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control\\\"\\n                       formControlName=\\\"description\\\">\\n                 <div *ngIf=\\\"formErrors.description\\\" class=\\\"alert alert-danger\\\">\\n                  {{ formErrors.description }}\\n                  </div>\\n              </div>\\n           </div>\\n           <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n               <md-checkbox formControlName=\\\"available\\\">Available</md-checkbox>\\n               <md-checkbox formControlName=\\\"reserved\\\">Reserved</md-checkbox>\\n              </div>\\n            </div>\\n            <!-- end form inputs -->\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n              <div class=\\\"form-group\\\">\\n               <button class=\\\"pull-right\\\" md-raised-button color=\\\"accent\\\" [disabled]=\\\"!formView.valid\\\" (click)=\\\"save()\\\">Save</button>\\n               <button md-raised-button color=\\\"accent\\\" (click)=\\\"back()\\\">BACK</button>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n    </md-card>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/lots/lots.component.html\n// module id = 491\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">Manage Parking</h4>\\n  <div class=\\\"card-body\\\">\\n      <md-tab-group [(selectedIndex)]=\\\"tabIndex\\\" (focusChange)=\\\"getRentedLotes($event)\\\">\\n        <md-tab label=\\\"IN - VEHICLE\\\">\\n          <md-card *ngIf=\\\"searchForm\\\" class=\\\"page-default\\\">\\n          <div class=\\\"row page\\\">\\n             <div class=\\\"col-md-3\\\">\\n               <h3>Search Vehicle</h3>\\n               <div class=\\\"form-group\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input id=\\\"typeahead-http\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\n                    [class.is-invalid]=\\\"searchFailed\\\"\\n                    (ngModelChange)=\\\"selectItem($event)\\\"\\n                    [(ngModel)]=\\\"model\\\" \\n                    [ngbTypeahead]=\\\"search\\\" \\n                    [inputFormatter]=\\\"formatter\\\"\\n                    [resultFormatter]=\\\"formatter\\\"\\n                    placeholder=\\\"Enter plate ej: AUX123\\\" \\n                    />\\n                    <span *ngIf=\\\"searching\\\">searching...</span>\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"searchFailed\\\">Sorry, suggestions could not be loaded.</div>\\n                  </div>\\n               </div>\\n             </div>\\n             <div class=\\\"col-md-9\\\">\\n                  <ngx-datatable\\n                    class=\\\"material\\\"\\n                    [rows]=\\\"vehicle\\\"\\n                    [headerHeight]=\\\"50\\\"\\n                    [footerHeight]=\\\"50\\\"\\n                    [rowHeight]=\\\"'auto'\\\">\\n                    <ngx-datatable-column name=\\\"id\\\" [width]=\\\"100\\\"></ngx-datatable-column>\\n                    <ngx-datatable-column name=\\\"customer\\\" [width]=\\\"100\\\">\\n                      <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        {{value.firstName}} {{value.lastName}}\\n                      </ng-template>\\n                    </ngx-datatable-column>\\n                    <ngx-datatable-column name=\\\"plate\\\" [width]=\\\"100\\\"></ngx-datatable-column>\\n                    <ngx-datatable-column name=\\\"brand\\\" [width]=\\\"100\\\">\\n                      <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        {{value.name}}\\n                      </ng-template>\\n                    </ngx-datatable-column>\\n                    <ngx-datatable-column name=\\\"vehicleType\\\" [width]=\\\"100\\\">\\n                      <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        {{value.name}}\\n                      </ng-template>\\n                    </ngx-datatable-column>\\n                    <ngx-datatable-column name=\\\"Action\\\">\\n                      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                        <button md-raised-button color=\\\"accent\\\" (click)=\\\"showCheckin()\\\">CHECK IN</button>\\n                      </ng-template>\\n                    </ngx-datatable-column>\\n                  </ngx-datatable>\\n                  <span class=\\\"app-action\\\">\\n                      <button md-fab routerLink=\\\"../customers/add\\\"><md-icon>add circle</md-icon></button>\\n                  </span>\\n             </div>\\n           </div>\\n          </md-card>\\n          <md-card *ngIf=\\\"checkinForm\\\">\\n            <button md-raised-button class=\\\"pull-right\\\" color=\\\"primary\\\" (click)=\\\"backSearchForm()\\\">BACK</button>\\n            <h3>CHECK-IN: Select Lot</h3>\\n            <ngb-pagination *ngIf=\\\"pagination.total_items > 0\\\"\\n              class=\\\"\\\"\\n              [collectionSize]=\\\"pagination.total_items\\\" \\n              [(page)]=\\\"page\\\" \\n              [pageSize]=\\\"pagination.limit\\\"\\n              [rotate]=\\\"true\\\" \\n              [ellipses]=\\\"false\\\" \\n              [boundaryLinks]=\\\"true\\\"\\n              (pageChange)=\\\"setPage(page)\\\">\\n            </ngb-pagination>\\n            <ngx-datatable\\n                class=\\\"material\\\"\\n                [rows]=\\\"lots | async\\\"\\n                [headerHeight]=\\\"50\\\"\\n                [footerHeight]=\\\"50\\\"\\n                [rowHeight]=\\\"'auto'\\\">\\n                <ngx-datatable-column name=\\\"id\\\" [width]=\\\"100\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"reference\\\" [width]=\\\"100\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"section\\\" [width]=\\\"100\\\">\\n                  <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value.name}}\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"available\\\" [width]=\\\"100\\\">\\n                  <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    <div [ngClass]=\\\"{'bg-success': value, 'bg-danger': !value}\\\" class=\\\"\\\">&nbsp;</div>\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"reserved\\\" [width]=\\\"100\\\">\\n                  <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    <i class=\\\"material-icons\\\" *ngIf=\\\"value\\\">accessible</i>\\n                    <i class=\\\"material-icons\\\" *ngIf=\\\"!value\\\">accessibility</i>\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Action\\\">\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                    <button md-raised-button color=\\\"accent\\\" [disabled]=\\\"!row.available\\\" (click)=\\\"selectLot(row)\\\">SELECT</button>\\n                  </ng-template>\\n                </ngx-datatable-column>\\n              </ngx-datatable>\\n          </md-card>\\n          \\n          <md-card *ngIf=\\\"rentLotTypeForm\\\">\\n            <button md-raised-button class=\\\"pull-right\\\" color=\\\"accent\\\" (click)=\\\"clear()\\\">CANCEL</button>\\n            <button md-raised-button class=\\\"pull-right\\\" color=\\\"primary\\\" (click)=\\\"backCheckInForm()\\\">BACK</button>\\n           \\n            <h3>CHECK-IN: Select Rent Type</h3>\\n            <div class=\\\"row\\\">\\n               <div class=\\\"col-md-4\\\">\\n               <div class=\\\"form-group\\\">\\n                <label for=\\\"rentLotsTypes\\\">Rent Type</label>\\n                    <select class=\\\"form-control\\\"  [(ngModel)]=\\\"selectedRentLotType\\\" required>\\n                      <option *ngFor=\\\"let type of rentLotsTypes|async\\\" [value]=\\\"type.id\\\">{{ type.name }}</option>\\n                    </select>\\n                </div>\\n                <button class=\\\"pull-right\\\" md-raised-button  color=\\\"accent\\\" [disabled]=\\\"!selectedRentLotType\\\" (click)=\\\"selectRentTypeLot()\\\">Next</button>\\n                </div>\\n              </div>\\n          </md-card>\\n\\n          <md-card *ngIf=\\\"showDetail\\\">\\n           <button md-raised-button class=\\\"pull-right\\\" color=\\\"accent\\\" (click)=\\\"clear()\\\">CANCEL</button>\\n           <button md-raised-button class=\\\"pull-right\\\" color=\\\"primary\\\" (click)=\\\"backCheckInForm()\\\">BACK</button>\\n           <h3>CHECK-IN: Rent Lot Detail</h3>\\n            <div class=\\\"row\\\">\\n               <div class=\\\"col-md-4\\\">\\n\\n                  <div class=\\\"panel panel-primary\\\">\\n                    <div class=\\\"panel-heading\\\">Rent Detail</div>\\n                    <div class=\\\"panel-body\\\">\\n                      <p>Customer: {{selectedVehicle.customer.firstName}} {{selectedVehicle.customer.lastName}}</p>\\n                      <p>PLATE: {{selectedVehicle.plate}}</p>\\n                      <p>TYPE: {{selectedVehicle.vehicleType.name}}</p>\\n                      <p>BRAND: {{selectedVehicle.brand.name}}</p>\\n                      <p>COLOR: <input type=\\\"color\\\" value=\\\"{{selectedVehicle.color}}\\\" disabled></p>\\n                      <p>Rent Type:\\n                        <select class=\\\"form-control\\\"  [(ngModel)]=\\\"selectedRentLotType\\\" disabled>\\n                          <option *ngFor=\\\"let type of rentLotsTypes|async\\\" [value]=\\\"type.id\\\">{{ type.name }}</option>\\n                        </select>\\n                      </p>\\n                      <p>Rent Lot: {{selectedLot.section.name}} - {{selectedLot.reference}}</p>\\n                    </div>\\n                  </div>\\n                  <button md-raised-button class=\\\"pull-left\\\" color=\\\"accent\\\" (click)=\\\"clear()\\\">DISCARD</button>\\n                  <button class=\\\"pull-right\\\" md-raised-button  color=\\\"primary\\\" (click)=\\\"checkin()\\\">CONFIRM</button>\\n                </div>\\n              </div>\\n          </md-card>\\n        </md-tab>\\n        <md-tab  label=\\\"OUT - VEHICLE\\\">\\n          <md-card *ngIf=\\\"checkOutSearchForm\\\" class=\\\"page-default\\\">\\n          <div class=\\\"row\\\">\\n             <div class=\\\"col-md-3\\\">\\n               <h3>Search Vehicle</h3>\\n               <div class=\\\"form-group\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input id=\\\"typeahead-http\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\n                    [class.is-invalid]=\\\"searchFailed\\\"\\n                    (ngModelChange)=\\\"selectItem($event)\\\"\\n                    [(ngModel)]=\\\"model\\\" \\n                    [ngbTypeahead]=\\\"search\\\" \\n                    [inputFormatter]=\\\"formatter\\\"\\n                    [resultFormatter]=\\\"formatter\\\"\\n                    placeholder=\\\"AUX\\\" \\n                    />\\n                    <span *ngIf=\\\"searching\\\">searching...</span>\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"searchFailed\\\">Sorry, suggestions could not be loaded.</div>\\n                  </div>\\n               </div>\\n             </div>\\n             <div class=\\\"col-md-9\\\">\\n             <div class=\\\"row mt-10\\\">\\n              <ngx-datatable\\n                class=\\\"material\\\"\\n                [rows]=\\\"vehicle\\\"\\n                [headerHeight]=\\\"50\\\"\\n                [footerHeight]=\\\"50\\\"\\n                [rowHeight]=\\\"'auto'\\\">\\n                <ngx-datatable-column name=\\\"id\\\" [width]=\\\"100\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"customer\\\" [width]=\\\"100\\\">\\n                  <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value.firstName}} {{value.lastName}}\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"plate\\\" [width]=\\\"100\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"brand\\\" [width]=\\\"100\\\">\\n                  <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value.name}}\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"vehicleType\\\" [width]=\\\"100\\\">\\n                  <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value.name}}\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Action\\\">\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                    <button md-raised-button color=\\\"accent\\\" (click)=\\\"showCheckout(row)\\\">CHECK OUT</button>\\n                  </ng-template>\\n                </ngx-datatable-column>\\n              </ngx-datatable>\\n             </div>\\n             </div>\\n           </div>\\n          </md-card>\\n\\n          <md-card *ngIf=\\\"checkoutForm\\\">\\n            <button md-raised-button class=\\\"pull-right\\\" color=\\\"accent\\\" (click)=\\\"clear()\\\">CANCEL</button>\\n            <button md-raised-button class=\\\"pull-right\\\" color=\\\"primary\\\" (click)=\\\"backSearchCheckout()\\\">BACK</button>\\n            <h3>CHECK-OUT: Select RentLot</h3>\\n            <ngx-datatable\\n                class=\\\"material\\\"\\n                [rows]=\\\"rentlots | async\\\"\\n                [headerHeight]=\\\"50\\\"\\n                [footerHeight]=\\\"50\\\"\\n                [rowHeight]=\\\"'auto'\\\">\\n                <ngx-datatable-column name=\\\"Customer\\\" prop=\\\"vehicle\\\" [width]=\\\"100\\\">\\n                  <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value.customer.firstName}} {{value.customer.lastName}}\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"vehicle\\\" [width]=\\\"100\\\">\\n                  <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    plate: {{value.plate}}, brand: {{value.brand.name}}, type:{{value.vehicleType.name}}\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"lot\\\" [width]=\\\"100\\\">\\n                  <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value.reference}}, {{value.section.name}}\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Action\\\">\\n                  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                    <button md-raised-button color=\\\"accent\\\" (click)=\\\"selectRentLot(row)\\\">SELECT</button>\\n                  </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n          </md-card>\\n\\n          <md-card *ngIf=\\\"paymentDetail\\\">\\n            <button md-raised-button class=\\\"pull-right\\\" color=\\\"accent\\\" (click)=\\\"clear()\\\">CANCEL</button>\\n            <h3>CHECK-OUT: Payment Detail</h3>\\n            <div class=\\\"row\\\">\\n               <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"panel panel-primary\\\">\\n                    <div class=\\\"panel-heading\\\">Payment</div>\\n                    <div class=\\\"panel-body\\\">\\n                      <p><strong>Customer:</strong> {{selectedRentlot.vehicle.customer.firstName}} {{selectedRentlot.vehicle.customer.lastName}}</p>\\n                      <p><strong>Plate:</strong> {{selectedRentlot.vehicle.plate}}</p>\\n                      <p><strong>Rent Lot:</strong> {{selectedRentlot.lot.section.name}} - {{selectedRentlot.lot.reference}}</p>\\n                      <p><strong>Amount: </strong>{{selectedRentlot.payment.currency.symbol}}{{selectedRentlot.payment.amount}}</p>\\n                      <p><strong>Rentlot Type:</strong> {{selectedRentlot.rentType.name}}</p>\\n                      <p><strong>Status:</strong> {{selectedRentlot.payment.paymentStatus.name}}</p>\\n                      <p><strong>Payment Type:</strong> {{selectedRentlot.payment.paymentType.name}}</p>\\n                    </div>\\n                  </div>\\n                  <button md-raised-button class=\\\"pull-left\\\" color=\\\"accent\\\" (click)=\\\"clear()\\\">DISCARD</button>\\n                  <button class=\\\"pull-right\\\" md-raised-button  color=\\\"primary\\\" (click)=\\\"checkout()\\\">CONFIRM</button>\\n                </div>\\n              </div>\\n          </md-card>\\n        </md-tab>\\n        <md-tab  label=\\\"RENTED\\\">\\n          <md-card *ngIf=\\\"!selectedRentlot\\\">\\n              <ngx-datatable\\n                  class=\\\"material\\\"\\n                  [columnMode]=\\\"'flex'\\\"\\n                  [rows]=\\\"rentlots | async\\\"\\n                  [headerHeight]=\\\"50\\\"\\n                  [footerHeight]=\\\"50\\\"\\n                  [rowHeight]=\\\"'auto'\\\">\\n                  <ngx-datatable-column name=\\\"Customer\\\" prop=\\\"vehicle\\\" [flexGrow]=\\\"1\\\">\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                      {{value.customer.firstName}} {{value.customer.lastName}}\\n                    </ng-template>\\n                  </ngx-datatable-column>\\n                  <ngx-datatable-column name=\\\"vehicle\\\" [flexGrow]=\\\"1\\\">\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                      plate: {{value.plate}}, brand: {{value.brand.name}}, type:{{value.vehicleType.name}}\\n                    </ng-template>\\n                  </ngx-datatable-column>\\n                  <ngx-datatable-column name=\\\"lot\\\" [flexGrow]=\\\"1\\\">\\n                    <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                      {{value.reference}}, {{value.section.name}}\\n                    </ng-template>\\n                  </ngx-datatable-column>\\n                  <ngx-datatable-column name=\\\"Action\\\" [flexGrow]=\\\"1\\\">\\n                    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                      <button md-raised-button color=\\\"accent\\\" (click)=\\\"showRentLotDetail(row)\\\"><i class=\\\"material-icons\\\">visibility</i></button>\\n                    </ng-template>\\n                  </ngx-datatable-column>\\n              </ngx-datatable>\\n              <ngb-pagination *ngIf=\\\"paginationRentLot.page_counts > 1\\\"\\n                class=\\\"\\\"\\n                [collectionSize]=\\\"paginationRentLot.total_items\\\" \\n                [(page)]=\\\"page\\\" \\n                [pageSize]=\\\"paginationRentLot.limit\\\"\\n                [rotate]=\\\"true\\\" \\n                [ellipses]=\\\"false\\\" \\n                [boundaryLinks]=\\\"true\\\"\\n                (pageChange)=\\\"setPageRentLot(page)\\\">\\n              </ngb-pagination>\\n          </md-card>\\n          <md-card *ngIf=\\\"selectedRentlot\\\">           \\n            <div class=\\\"row\\\">\\n               <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"panel panel-primary\\\">\\n                    <div class=\\\"panel-heading\\\"><h3>Detail</h3></div>\\n                    <div class=\\\"panel-body\\\">\\n                      <p><strong>Customer:</strong> {{selectedRentlot.vehicle.customer.firstName}} {{selectedRentlot.vehicle.customer.lastName}}</p>\\n                      <p><strong>Plate:</strong> {{selectedRentlot.vehicle.plate}}</p>\\n                      <p><strong>Rent Lot:</strong> {{selectedRentlot.lot.section.name}} - {{selectedRentlot.lot.reference}}</p>\\n                      <p><strong>Start Time:</strong> {{selectedRentlot.startTime | date:'dd-MM-yyyy HH:mm a z'}}</p>\\n                      <p><strong>End Time:</strong> {{selectedRentlot.currentTime | date:'dd-MM-yyyy HH:mm a z'}}</p>\\n                      <p><strong>Total Time:</strong> {{selectedRentlot.totalHours}}</p>\\n                      <p><strong>Amount:</strong> {{selectedRentlot.payment.currency.symbol}}{{selectedRentlot.payment.amount}}</p>\\n                      <p><strong>Rentlot Type:</strong> {{selectedRentlot.rentType.name}}</p>\\n                      <p><strong>Status:</strong> {{selectedRentlot.payment.paymentStatus.name}}</p>\\n                      <p><strong>Payment Type:</strong> {{selectedRentlot.payment.paymentType.name}}</p>\\n\\n                    </div>\\n                  </div>\\n                  <button md-raised-button class=\\\"pull-left\\\" color=\\\"accent\\\" (click)=\\\"clear()\\\">BACK</button>\\n                </div>\\n              </div>\\n          </md-card>\\n        </md-tab>\\n      </md-tab-group>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/parking/parking.component.html\n// module id = 492\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">My Profile</h4>\\n  <div class=\\\"card-body\\\">\\n      <div>\\n      <span class=\\\"app-toolbar-filler\\\"></span>\\n      <button md-button></button>\\n      </div>\\n        <md-spinner *ngIf=\\\"!showForm\\\" class=\\\"app-spinner\\\"></md-spinner>\\n        <div *ngIf=\\\"showForm\\\" class=\\\"col-md-12\\\">\\n             <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  <img src=\\\"../../assets/images/user.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"...\\\">\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                  <label>Please Select an image</label>\\n                  <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"setPhoto($event)\\\" class=\\\"form-control-file\\\">\\n                  <button md-raised-button (click)=\\\"savePhoto($event)\\\" color=\\\"primary\\\" >Save</button>\\n                </div>\\n              </div>\\n           </div>\\n        <form *ngIf=\\\"showForm\\\" [formGroup]=\\\"formView\\\">\\n          <!-- form inputs -->\\n          <div class=\\\"row\\\">\\n           <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"firstName\\\">First Name</label>\\n                <input type=\\\"text\\\" id=\\\"firstName\\\" class=\\\"form-control\\\"\\n                       formControlName=\\\"firstName\\\" required >\\n                 <div *ngIf=\\\"formErrors.firstName\\\" class=\\\"alert alert-danger\\\">\\n                  {{ formErrors.firstName }}\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"lastName\\\">Last Name</label>\\n                <input type=\\\"text\\\" id=\\\"lastName\\\" class=\\\"form-control\\\"\\n                       formControlName=\\\"lastName\\\" required >\\n                 <div *ngIf=\\\"formErrors.lastName\\\" class=\\\"alert alert-danger\\\">\\n                  {{ formErrors.lastName }}\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email</label>\\n                <input type=\\\"text\\\" id=\\\"email\\\" class=\\\"form-control\\\"\\n                       formControlName=\\\"email\\\" required >\\n                 <div *ngIf=\\\"formErrors.email\\\" class=\\\"alert alert-danger\\\">\\n                  {{ formErrors.email }}\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"phoneNumber\\\">Phone</label>\\n                <input type=\\\"text\\\" id=\\\"phoneNumber\\\" class=\\\"form-control\\\"\\n                       formControlName=\\\"phoneNumber\\\" required >\\n                 <div *ngIf=\\\"formErrors.phoneNumber\\\" class=\\\"alert alert-danger\\\">\\n                  {{ formErrors.phoneNumber }}\\n                  </div>\\n              </div>\\n           </div>\\n\\n           <div class=\\\"col-md-2\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\"\\n                       formControlName=\\\"username\\\" disabled >\\n              </div>\\n              \\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\"\\n                       formControlName=\\\"password\\\" required >\\n                 <div *ngIf=\\\"formErrors.password\\\" class=\\\"alert alert-danger\\\">\\n                  {{ formErrors.password }}\\n                  </div>\\n              </div>\\n            </div>\\n            <!-- end form inputs -->\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n              <div class=\\\"form-group\\\">\\n               <button class=\\\"pull-right\\\" md-raised-button color=\\\"accent\\\" [disabled]=\\\"!formView.valid\\\" (click)=\\\"save()\\\">Save</button>\\n               <button class=\\\"pull-left\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"back()\\\">Cancel</button>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/profile/profile.component.html\n// module id = 493\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">Average Report</h4>\\n  <div class=\\\"card-body\\\">\\n  <ngb-accordion #acc=\\\"ngbAccordion\\\" activeIds=\\\"filter\\\">\\n  <ngb-panel title=\\\"Show Filters\\\"  id=\\\"filter\\\">\\n    <ng-template  ngbPanelContent>\\n      <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n              <label >From</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                       name=\\\"dpFrom\\\" [(ngModel)]=\\\"fromDate\\\" ngbDatepicker #dpFrom=\\\"ngbDatepicker\\\">\\n                <button class=\\\"input-group-addon\\\" (click)=\\\"dpFrom.toggle()\\\" type=\\\"button\\\">\\n                  <i class=\\\"material-icons\\\">date_range</i>\\n                </button>\\n              </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n              <label >To</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                       name=\\\"dpTo\\\" [(ngModel)]=\\\"toDate\\\" ngbDatepicker #dpTo=\\\"ngbDatepicker\\\">\\n                <button class=\\\"input-group-addon\\\" (click)=\\\"dpTo.toggle()\\\" type=\\\"button\\\">\\n                  <i class=\\\"material-icons\\\">date_range</i>\\n                </button>\\n              </div>\\n              </div>\\n            </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"form-group\\\">\\n           <button class=\\\"pull-left\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"applyFilters()\\\">Apply</button>\\n           <button class=\\\"pull-left\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"download()\\\">Generate Report</button>\\n           <a *ngIf=\\\"reportUrl\\\" href=\\\"{{reportUrl}}\\\" target=\\\"_blank\\\">Click Here To download</a>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </ngb-panel>\\n</ngb-accordion>\\n    <md-tab-group>\\n      <md-tab label=\\\"Billing\\\">\\n            <div class=\\\"card bg-light mb-3\\\" style=\\\"max-width: 20rem;\\\">\\n              <div class=\\\"card-header\\\">Earn Average</div>\\n              <div class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title\\\">{{totalAmountAverage | currency:'ARS'}}</h4>\\n              </div>\\n            </div>\\n      </md-tab>\\n      <md-tab label=\\\"Vehicles\\\">\\n        <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Vehicle</th>\\n            <th scope=\\\"col\\\">Customer</th>\\n            <th scope=\\\"col\\\">Amount Average</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let vehicle of vehiclesRow\\\">\\n            <th scope=\\\"row\\\">{{vehicle.vehicle.id}}</th>\\n            <td>{{vehicle.vehicle.plate}}</td>\\n            <td>{{vehicle.vehicle.customer.firstName}} {{vehicle.vehicle.customer.lastName}}</td>\\n            <td>{{vehicle.amount_average | currency:'ARS'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <ngb-pagination\\n          class=\\\"\\\"\\n          [collectionSize]=\\\"vehicles.length\\\" \\n          [(page)]=\\\"vehiclesPage\\\" \\n          [pageSize]=\\\"5\\\"\\n          [rotate]=\\\"true\\\" \\n          [ellipses]=\\\"false\\\" \\n          [boundaryLinks]=\\\"true\\\"\\n          (pageChange)=\\\"setVehiclesPage(vehiclesPage)\\\">\\n      </ngb-pagination>\\n      </md-tab>\\n      <md-tab label=\\\"Rented Lots\\\">\\n        <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Lot</th>\\n            <th scope=\\\"col\\\">Section</th>\\n            <th scope=\\\"col\\\">Reserved</th>\\n            <th scope=\\\"col\\\">Amount Average</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let lot of lotsRow\\\">\\n            <th scope=\\\"row\\\">{{lot.lot.id}}</th>\\n            <td>{{lot.lot.reference}}</td>\\n            <td>{{lot.lot.section.name}}</td>\\n            <td>\\n              <i class=\\\"material-icons\\\" *ngIf=\\\"lot.lot.reserved\\\">accessible</i>\\n              <i class=\\\"material-icons\\\" *ngIf=\\\"!lot.lot.reserved\\\">accessibility</i>\\n            </td>\\n            <td>{{lot.amount_average | currency:'ARS'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <ngb-pagination\\n          class=\\\"\\\"\\n          [collectionSize]=\\\"lots.length\\\" \\n          [(page)]=\\\"lotsPage\\\" \\n          [pageSize]=\\\"5\\\"\\n          [rotate]=\\\"true\\\" \\n          [ellipses]=\\\"false\\\" \\n          [boundaryLinks]=\\\"true\\\"\\n          (pageChange)=\\\"setLotsPage(lotsPage)\\\">\\n      </ngb-pagination>\\n      </md-tab>\\n    </md-tab-group>\\n    <div class=\\\"row\\\">\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/reports/average/average.component.html\n// module id = 494\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">Billing Reports</h4>\\n  <div class=\\\"card-body\\\">\\n  <ngb-accordion #acc=\\\"ngbAccordion\\\" activeIds=\\\"filter\\\">\\n  <ngb-panel title=\\\"Show Filters\\\"  id=\\\"filter\\\">\\n    <ng-template ngbPanelContent>\\n      <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n              <label >From</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                       name=\\\"dpFrom\\\" [(ngModel)]=\\\"fromDate\\\" ngbDatepicker #dpFrom=\\\"ngbDatepicker\\\">\\n                <button class=\\\"input-group-addon\\\" (click)=\\\"dpFrom.toggle()\\\" type=\\\"button\\\">\\n                  <i class=\\\"material-icons\\\">date_range</i>\\n                </button>\\n              </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n              <label >To</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                       name=\\\"dpTo\\\" [(ngModel)]=\\\"toDate\\\" ngbDatepicker #dpTo=\\\"ngbDatepicker\\\">\\n                <button class=\\\"input-group-addon\\\" (click)=\\\"dpTo.toggle()\\\" type=\\\"button\\\">\\n                  <i class=\\\"material-icons\\\">date_range</i>\\n                </button>\\n              </div>\\n              </div>\\n            </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"form-group\\\">\\n           <button class=\\\"pull-left\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"applyFilters()\\\">Apply</button>\\n           <button class=\\\"pull-left\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"download()\\\">Generate Report</button>\\n           <a *ngIf=\\\"reportUrl\\\" href=\\\"{{reportUrl}}\\\" target=\\\"_blank\\\">Click Here To download</a>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </ngb-panel>\\n</ngb-accordion>\\n    <md-tab-group>\\n      <md-tab label=\\\"Billing\\\">\\n            <div class=\\\"card bg-light mb-3\\\" style=\\\"max-width: 20rem;\\\">\\n              <div class=\\\"card-header\\\">Total Earn</div>\\n              <div class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title\\\">{{this.vehicles.total_vehicles_amount | currency:'ARS'}}</h4>\\n              </div>\\n            </div>\\n            <div class=\\\"card bg-light mb-3\\\" style=\\\"max-width: 20rem;\\\">\\n              <div class=\\\"card-header\\\">Vehicles</div>\\n              <div class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title\\\">{{this.vehicles.total_vehicles}}</h4>\\n              </div>\\n            </div>\\n            <div class=\\\"card bg-light mb-3\\\" style=\\\"max-width: 20rem;\\\">\\n              <div class=\\\"card-header\\\">Unique Vehicles</div>\\n              <div class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title\\\">{{this.vehicles.total_vehicles_distinct}}</h4>\\n              </div>\\n            </div>\\n      </md-tab>\\n      <md-tab label=\\\"Vehicles\\\">\\n        <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Vehicle</th>\\n            <th scope=\\\"col\\\">Customer</th>\\n            <th scope=\\\"col\\\">Rented Times</th>\\n            <th scope=\\\"col\\\">Total Amount</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let vehicle of vehiclesRow\\\">\\n            <th scope=\\\"row\\\">{{vehicle.vehicle.id}}</th>\\n            <td>{{vehicle.vehicle.plate}}</td>\\n            <td>{{vehicle.vehicle.customer.firstName}} {{vehicle.vehicle.customer.lastName}}</td>\\n            <td>\\n              {{vehicle.rent_times}}\\n            </td>\\n            <td>{{vehicle.total_amount | currency:'ARS'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <ngb-pagination\\n          class=\\\"\\\"\\n          [collectionSize]=\\\"vehicles.total_items\\\" \\n          [(page)]=\\\"vehiclesPage\\\" \\n          [pageSize]=\\\"5\\\"\\n          [rotate]=\\\"true\\\" \\n          [ellipses]=\\\"false\\\" \\n          [boundaryLinks]=\\\"true\\\"\\n          (pageChange)=\\\"setVehiclesPage(vehiclesPage)\\\">\\n      </ngb-pagination>\\n      </md-tab>\\n    </md-tab-group>\\n    <div class=\\\"row\\\">\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/reports/billing/billing.component.html\n// module id = 495\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">Lots Reports</h4>\\n  <div class=\\\"card-body\\\">\\n  <ngb-accordion #acc=\\\"ngbAccordion\\\" activeIds=\\\"filter\\\">\\n  <ngb-panel title=\\\"Show Filters\\\"  id=\\\"filter\\\">\\n    <ng-template ngbPanelContent>\\n      <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n              <md-checkbox [(ngModel)]=\\\"reservedLots\\\">Show only Reserverd Lots</md-checkbox>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n              <md-checkbox [(ngModel)]=\\\"showAll\\\">Show All</md-checkbox>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n              <label >From</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                       name=\\\"dpFrom\\\" [(ngModel)]=\\\"fromDate\\\" ngbDatepicker #dpFrom=\\\"ngbDatepicker\\\">\\n                <button class=\\\"input-group-addon\\\" (click)=\\\"dpFrom.toggle()\\\" type=\\\"button\\\">\\n                  <i class=\\\"material-icons\\\">date_range</i>\\n                </button>\\n              </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n              <label >To</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                       name=\\\"dpTo\\\" [(ngModel)]=\\\"toDate\\\" ngbDatepicker #dpTo=\\\"ngbDatepicker\\\">\\n                <button class=\\\"input-group-addon\\\" (click)=\\\"dpTo.toggle()\\\" type=\\\"button\\\">\\n                  <i class=\\\"material-icons\\\">date_range</i>\\n                </button>\\n              </div>\\n              </div>\\n            </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"form-group\\\">\\n           <button class=\\\"pull-left\\\" md-raised-button color=\\\"primary\\\" (click)=\\\"applyFilters()\\\">Apply</button>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </ngb-panel>\\n</ngb-accordion>\\n   \\n    <md-tab-group>\\n      <md-tab label=\\\"Rented Lots\\\">\\n        <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Lot</th>\\n            <th scope=\\\"col\\\">Section</th>\\n            <th scope=\\\"col\\\">Reserved</th>\\n            <th scope=\\\"col\\\">Total Times Rented</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let lot of lotsRow\\\">\\n            <th scope=\\\"row\\\">{{lot.lot.id}}</th>\\n            <td>{{lot.lot.reference}}</td>\\n            <td>{{lot.lot.section.name}}</td>\\n            <td>\\n              <i class=\\\"material-icons\\\" *ngIf=\\\"lot.lot.reserved\\\">accessible</i>\\n              <i class=\\\"material-icons\\\" *ngIf=\\\"!lot.lot.reserved\\\">accessibility</i>\\n            </td>\\n            <td>{{lot.total_rented}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <ngb-pagination\\n          class=\\\"\\\"\\n          [collectionSize]=\\\"lots.total_items\\\" \\n          [(page)]=\\\"lotsPage\\\" \\n          [pageSize]=\\\"5\\\"\\n          [rotate]=\\\"true\\\" \\n          [ellipses]=\\\"false\\\" \\n          [boundaryLinks]=\\\"true\\\"\\n          (pageChange)=\\\"setLotsPage(lotsPage)\\\">\\n      </ngb-pagination>\\n      </md-tab>\\n      <md-tab label=\\\"Unused Lots\\\">\\n          <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">#</th>\\n              <th scope=\\\"col\\\">Lot</th>\\n              <th scope=\\\"col\\\">Section</th>\\n              <th scope=\\\"col\\\">Reserved</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let lot of unusedLotsRow\\\">\\n              <th scope=\\\"row\\\">{{lot.id}}</th>\\n              <td>{{lot.reference}}</td>\\n              <td>{{lot.section.name}}</td>\\n              <td>\\n                <i class=\\\"material-icons\\\" *ngIf=\\\"lot.reserved\\\">accessible</i>\\n                <i class=\\\"material-icons\\\" *ngIf=\\\"!lot.reserved\\\">accessibility</i>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <ngb-pagination\\n            class=\\\"\\\"\\n            [collectionSize]=\\\"unusedLots.total_items\\\" \\n            [(page)]=\\\"unusedLotsPage\\\" \\n            [pageSize]=\\\"5\\\"\\n            [rotate]=\\\"true\\\" \\n            [ellipses]=\\\"false\\\" \\n            [boundaryLinks]=\\\"true\\\"\\n            (pageChange)=\\\"setUnusedLotsPage(unusedLotsPage)\\\">\\n        </ngb-pagination>\\n      </md-tab>\\n    </md-tab-group>\\n    <div class=\\\"row\\\">\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/reports/lots-report/lots-report.component.html\n// module id = 496\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">Reports</h4>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"card\\\" style=\\\"width: 20rem;\\\">\\n            <div class=\\\"card-body\\\">\\n              <h4 class=\\\"card-title\\\">Lots</h4>\\n              <a routerLink=\\\"/admin/reports/lots\\\" class=\\\"card-link\\\">View</a>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"card\\\" style=\\\"width: 20rem;\\\">\\n            <div class=\\\"card-body\\\">\\n              <h4 class=\\\"card-title\\\">Billing</h4>\\n              <a routerLink=\\\"/admin/reports/billing\\\" class=\\\"card-link\\\">View</a>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"card\\\" style=\\\"width: 20rem;\\\">\\n            <div class=\\\"card-body\\\">\\n              <h4 class=\\\"card-title\\\">Average</h4>\\n              <a routerLink=\\\"/admin/reports/average\\\" class=\\\"card-link\\\">View</a>\\n            </div>\\n          </div>\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/reports/reports.component.html\n// module id = 497\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">Audit</h4>\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"!audit\\\">\\n        <ngx-datatable\\n            class=\\\"material\\\"\\n            [rows]=\\\" userAudits | async \\\"\\n            [columnMode]=\\\"'force'\\\"\\n            [headerHeight]=\\\"50\\\"\\n            [footerHeight]=\\\"50\\\"\\n            [rowHeight]=\\\"'auto'\\\">\\n            <ngx-datatable-column name=\\\"id\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"User\\\" >\\n              <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                {{value.username}}\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"action\\\" >\\n              <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                {{value}}\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Action\\\" >\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                <button md-raised-button color=\\\"accent\\\" (click)=\\\"showDetail(row)\\\"><i class=\\\"material-icons\\\">visibility</i></button>\\n              </ng-template>\\n            </ngx-datatable-column>\\n          </ngx-datatable>\\n          <ngb-pagination \\n            class=\\\"\\\"\\n            [collectionSize]=\\\"pagination.total_items\\\" \\n            [(page)]=\\\"page\\\" \\n            [pageSize]=\\\"pagination.limit\\\"\\n            [maxSize] = \\\"5\\\"\\n            [rotate]=\\\"true\\\" \\n            [boundaryLinks]=\\\"true\\\"\\n            (pageChange)=\\\"setPage(page)\\\">\\n          </ngb-pagination>\\n      </div>\\n      \\n      <md-card *ngIf=\\\"audit\\\">\\n      <h2>Detail</h2>\\n      <div>\\n        <br>\\n        <p class=\\\"text-md-left\\\"><strong>Action:</strong> {{audit.action}}</p>\\n        <p class=\\\"text-md-left\\\"><strong>Time:</strong> {{audit.createdAt.date | date:'dd-MM-yyyy HH:mm a z'}}</p>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <strong>Payload: </strong>\\n            <pre>\\n            {{audit.meta | json}}\\n            </pre>\\n          </div>\\n        </div>\\n          <button md-raised-button color=\\\"primary\\\" (click)=\\\"back()\\\">Back</button>\\n      </div>\\n      </md-card>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/users-audit/users-audit.component.html\n// module id = 498\n// module chunks = 1","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">Users</h4>\\n  <div class=\\\"card-body\\\">\\n    <ngx-datatable\\n        class=\\\"material\\\"\\n        [rows]=\\\"users | async\\\"\\n        [columnMode]=\\\"'force'\\\"\\n        [headerHeight]=\\\"50\\\"\\n        [footerHeight]=\\\"50\\\"\\n        [rowHeight]=\\\"'auto'\\\">\\n        <ngx-datatable-column name=\\\"FirstName\\\">\\n          <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n            {{value}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"LastName\\\">\\n          <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n            {{value}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Email\\\">\\n          <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n            {{value}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"UserGroups\\\">\\n          <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n            {{value['0']['name']}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"LockUser\\\">\\n          <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n            {{value}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Action\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            <button md-raised-button color=\\\"accent\\\" (click)=\\\"edit(row['id'])\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n          </ng-template>\\n        </ngx-datatable-column>\\n      </ngx-datatable>\\n      <span class=\\\"app-action\\\">\\n          <button md-fab (click)=\\\"add()\\\"><md-icon>add circle</md-icon></button>\\n      </span>\\n   </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/users/users.component.html\n// module id = 499\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { User } from '../models/user';\n\n@Injectable()\nexport class UserService {\n\n    users: Observable<User[]>\n    private _users: BehaviorSubject<User[]>;\n    private baseUrl: string;\n    private dataStore: {\n        users: User[]\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.user;\n        this.dataStore = { users: [] };\n        this._users = <BehaviorSubject<User[]>>new BehaviorSubject([]);\n        this.users = this._users.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.users = data.items;\n              this._users.next(Object.assign({}, this.dataStore).users);\n            },\n              error => console.log('Could not load Users.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    upload(id, file){\n        let url = this.baseUrl+'/'+id;\n        let fileToUpload = new FormData();\n        console.log(file);\n        fileToUpload.append(\"file\", file);\n        this.commonService.uploadFile(url, fileToUpload);\n    }\n\n    delete(id){}\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/user.service.ts","module.exports = \"<div class=\\\"app-content\\\"><div>\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 500\n// module chunks = 1","module.exports = \"<md-sidenav-container>\\n  <md-sidenav #sidenav mode=\\\"side\\\" class=\\\"app-sidenav\\\">\\n    Sidenav\\n  </md-sidenav>\\n\\n  <md-toolbar color=\\\"primary\\\">\\n    <button class=\\\"app-icon-button\\\" (click)=\\\"sidenav.toggle()\\\">\\n      <i class=\\\"material-icons app-toolbar-menu\\\">menu</i>\\n    </button>\\n\\n    Angular Material2 Example App\\n\\n    <span class=\\\"app-toolbar-filler\\\"></span>\\n    <button md-button (click)=\\\"isDarkTheme = !isDarkTheme\\\">TOGGLE DARK THEME</button>\\n  </md-toolbar>\\n\\n  <div class=\\\"app-content\\\">\\n\\n    <md-card>\\n      <button md-button>FLAT</button>\\n      <button md-raised-button md-tooltip=\\\"This is a tooltip!\\\">RAISED</button>\\n      <button md-raised-button color=\\\"primary\\\">PRIMARY RAISED</button>\\n      <button md-raised-button color=\\\"accent\\\">ACCENT RAISED</button>\\n    </md-card>\\n\\n    <md-card>\\n      <md-checkbox>Unchecked</md-checkbox>\\n      <md-checkbox [checked]=\\\"true\\\">Checked</md-checkbox>\\n      <md-checkbox [indeterminate]=\\\"true\\\">Indeterminate</md-checkbox>\\n      <md-checkbox [disabled]=\\\"true\\\">Disabled</md-checkbox>\\n    </md-card>\\n\\n    <md-card>\\n      <md-radio-button name=\\\"symbol\\\">Alpha</md-radio-button>\\n      <md-radio-button name=\\\"symbol\\\">Beta</md-radio-button>\\n      <md-radio-button name=\\\"symbol\\\" disabled>Gamma</md-radio-button>\\n    </md-card>\\n\\n    <md-card class=\\\"app-input-section\\\">\\n\\n    </md-card>\\n\\n    <md-card>\\n      <md-list class=\\\"app-list\\\">\\n        <md-list-item *ngFor=\\\"let food of foods\\\">\\n          <h3 md-line>{{food.name}}</h3>\\n          <p md-line class=\\\"demo-secondary-text\\\">{{food.rating}}</p>\\n        </md-list-item>\\n      </md-list>\\n    </md-card>\\n\\n    <md-card>\\n      <md-spinner class=\\\"app-spinner\\\"></md-spinner>\\n      <md-spinner color=\\\"accent\\\" class=\\\"app-spinner\\\"></md-spinner>\\n    </md-card>\\n\\n    <md-card>\\n      <label>\\n        Indeterminate progress-bar\\n        <md-progress-bar\\n            class=\\\"app-progress\\\"\\n            mode=\\\"indeterminate\\\"\\n            aria-label=\\\"Indeterminate progress-bar example\\\"></md-progress-bar>\\n      </label>\\n\\n      <label>\\n        Determinate progress bar - {{progress}}%\\n        <md-progress-bar\\n            class=\\\"app-progress\\\"\\n            color=\\\"accent\\\"\\n            mode=\\\"determinate\\\"\\n            [value]=\\\"progress\\\"\\n            aria-label=\\\"Determinate progress-bar example\\\"></md-progress-bar>\\n      </label>\\n    </md-card>\\n\\n    <md-card>\\n      <md-tab-group>\\n        <md-tab label=\\\"Earth\\\">\\n          <p>EARTH</p>\\n        </md-tab>\\n        <md-tab label=\\\"Fire\\\">\\n          <p>FIRE</p>\\n        </md-tab>\\n      </md-tab-group>\\n    </md-card>\\n\\n    <md-card>\\n      <md-icon>build</md-icon>\\n    </md-card>\\n\\n    <md-card>\\n      <button md-button [md-menu-trigger-for]=\\\"menu\\\">\\n        MENU\\n      </button>\\n    </md-card>\\n\\n    <md-menu #menu=\\\"mdMenu\\\">\\n      <button md-menu-item>Lemon</button>\\n      <button md-menu-item>Lime</button>\\n      <button md-menu-item>Banana</button>\\n    </md-menu>\\n\\n    <md-card>\\n      <button md-raised-button (click)=\\\"showSnackbar()\\\">SNACKBAR</button>\\n    </md-card>\\n\\n  </div>\\n\\n</md-sidenav-container>\\n\\n<span class=\\\"app-action\\\">\\n  <button md-fab><md-icon>check circle</md-icon></button>\\n</span>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 501\n// module chunks = 1","module.exports = \"<div class=\\\"center\\\">\\n<md-card class=\\\"\\\">\\n  <p *ngIf=\\\"showError\\\">\\n    <ngb-alert [dismissible]=\\\"false\\\">\\n      <strong>Warning!</strong> Invalid Username or Password.\\n    </ngb-alert>\\n  </p>\\n  <img src=\\\"../assets/images/icon-parking.png\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #loginForm=\\\"ngForm\\\">\\n  <md-input-container>\\n    <input mdInput placeholder=\\\"Username\\\"  [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\"  #loginForm=\\\"ngModel\\\">\\n  </md-input-container>\\n  \\n  <p>\\n    <md-input-container>\\n      <input mdInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" type=\\\"password\\\" #loginForm=\\\"ngModel\\\">\\n    </md-input-container>\\n  </p>\\n <button md-raised-button type=\\\"submit\\\">Login</button>\\n </form>\\n\\n</md-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = 502\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport { environment } from '../../environments/environment';\n\nimport { CommonService } from './common.service';\nimport { Vehicle } from '../models/vehicle';\nimport { Pagination } from '../models/pagination';\n\n@Injectable()\nexport class VehicleService {\n\n    vehicles: Observable<Vehicle[]>;\n    pagination: Observable<Pagination>;\n    private _vehicles: BehaviorSubject<Vehicle[]>;\n    private _pagination: BehaviorSubject<Pagination>;\n    private baseUrl: string;\n    private dataStore: {\n        vehicles: Vehicle[],\n        pagination: Pagination\n    };\n\n    constructor(private commonService: CommonService) {\n        this.baseUrl = environment.apiUrlBase + environment.apiPaths.vehicle;\n        this.dataStore = { vehicles: [] , pagination: new Pagination()};\n        this._vehicles = <BehaviorSubject<Vehicle[]>>new BehaviorSubject([]);\n        this._pagination = <BehaviorSubject<Pagination>>new BehaviorSubject(new Pagination());\n        this.vehicles = this._vehicles.asObservable();\n        this.pagination = this._pagination.asObservable();\n    }\n\n    getList(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        this.commonService.get(url, params)\n            .subscribe(data => {\n              this.dataStore.vehicles = data.items;\n              this.dataStore.pagination = data.pagination;\n              this._vehicles.next(Object.assign({}, this.dataStore).vehicles);\n              this._pagination.next(Object.assign({}, this.dataStore).pagination);\n            },\n              error => console.log('Could not load Vehicles.'),\n              () => console.log(\"done\")\n            );\n    }\n\n    search(params={offset:0, limit:20, orderby:null, where:null}){\n        let url = this.baseUrl+'/all/';\n        return this.commonService.get(url, params);\n    }\n\n    get(id){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.get(url);\n    }\n\n    create(data){\n        let url = this.baseUrl;\n        return this.commonService.post(url, data);\n    }\n\n    update(id, data){\n        let url = this.baseUrl+'/'+id;\n        return this.commonService.put(url, data);\n    }\n\n    delete(id){}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/vehicle.service.ts","export class Pagination {\n    after: number = 0;\n    next: number = 0;\n    offset: number = 0;\n    page: number = 0;\n    page_counts: number = 0;\n    total_items: number = 0;\n    limit: number = 10;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/pagination.ts"],"sourceRoot":""}